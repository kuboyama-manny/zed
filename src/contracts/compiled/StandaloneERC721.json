{
  "contractName": "StandaloneERC721",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "minters",
          "type": "address[]"
        },
        {
          "name": "pausers",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"minters\",\"type\":\"address[]\"},{\"name\":\"pausers\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"initialize()\":{\"details\":\"Constructor function\"},\"initialize(string,string)\":{\"details\":\"Constructor function\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mintWithTokenURI(address,uint256,string)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"owner address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"paused()\":{\"return\":\"true if the contract is paused, false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.   * Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Standard ERC721 token, with minting and pause functionality. \"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-eth/contracts/token/ERC721/StandaloneERC721.sol\":\"StandaloneERC721\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-eth/contracts/access/Roles.sol\":{\"keccak256\":\"0x53c9df37812df0f4c36a0a6399c4a5311d22ae3c68c0ec0e20c7ba8f4f068121\",\"urls\":[\"bzzr://e48ac676564d06469b4b19b87dafc08bf5530dc69b7af072c5e726ef36bde44c\"]},\"openzeppelin-eth/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x0b1aefcdcacde470b930e6e81292c49a28d9388e81a39faef2debd4ea68b39d9\",\"urls\":[\"bzzr://a2e78ae2527d2832eefc4be977b0bc8bbe2544020dacd9af9212bc4547bbfd43\"]},\"openzeppelin-eth/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0xb611d0561725d776a697e37b9065ba759504a9d5a9c0248cd04b1ab06b9c494e\",\"urls\":[\"bzzr://668ec7c97ef0226aa30bb6291e93f1ce5866edc6b69fa4642fcb058dfe92da15\"]},\"openzeppelin-eth/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x2d84c4799438b650ca2c4f71bb0828786ab86bc10128189c82f417ff5e333192\",\"urls\":[\"bzzr://62e035c528123c5073f1df85d0705d85d45f544c134cdf15b4b4440998c67d87\"]},\"openzeppelin-eth/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x08217416f439c46726ce5274f16c6c5d36d5fec0ff1da41584df065c016ac948\",\"urls\":[\"bzzr://0d778ce7e826f62d8f1980873bd46fee85fe02a0eece9ca4c98f68ecb7815af2\"]},\"openzeppelin-eth/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x17000cb4fbe29114c49663a16f5d821009e6189ccb12886adffaa9a6ebd8ae3e\",\"urls\":[\"bzzr://d9248ae89556e25bf84e4ea86e7aa401a8ce9171375cd21f70a821a7775ef483\"]},\"openzeppelin-eth/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xca27427124232a675642ba45303b78d5a36e1207ee222030ef249e11eba5a224\",\"urls\":[\"bzzr://013c67962737acca577ecd24e6b6c80f85b05fd03c1c75ab68f65a084f4b4cfd\"]},\"openzeppelin-eth/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xb1888bdde45860118af14b3b1a844cea1773288fc67fd32e7d702d6791487515\",\"urls\":[\"bzzr://adce23e2bacbf881728ee23b51b21724f3bc910b6398022e97c140a2de3aa14f\"]},\"openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x1465c565746dc6bde98e10b7e83e12152acd58f9f57ec158b35eec566a0d92ae\",\"urls\":[\"bzzr://ad4ecd53d413c0543bdb9062b3a5d09c63bd5481ab0c7f41bac284a67fb1579f\"]},\"openzeppelin-eth/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x1105d81f7ee6131f20de223f0a7c268dd9ca09b549bdbbb1ea0952ac3cdde8ac\",\"urls\":[\"bzzr://f3079d98d35a1ce46cc6b3f98d8700c7934f67e422359d7c5ab36828172ece72\"]},\"openzeppelin-eth/contracts/token/ERC721/ERC721MetadataMintable.sol\":{\"keccak256\":\"0x35970814caba4bb78ae40231ba7524395c1e6fa7a6a0f1a39b47d800c95742b2\",\"urls\":[\"bzzr://cefbee247affe601318695a26d7fb9c02759ab9e38686ea0e6ae68ba2c5d933f\"]},\"openzeppelin-eth/contracts/token/ERC721/ERC721Pausable.sol\":{\"keccak256\":\"0xf304d09782de49d3672270ebd1bc6a5ad89105e8d96b89662562f1ef8cdce37b\",\"urls\":[\"bzzr://2f78778c0c2cbbaffdd4872df13bc507a7d5d6096143d9179dc47009f0c5a064\"]},\"openzeppelin-eth/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x1bf12a88c88f967277e086e393716409d374e72a622bab9d487b3b8259bec167\",\"urls\":[\"bzzr://4091fb1378ed8262328f381fe4b4a0cfd20d04fdb90c832fcb559dca055aa9a0\"]},\"openzeppelin-eth/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xeccffb8b24b63bf5b9c483ce9d3abaaab256e9bf6c4195a2507f66b5940954ef\",\"urls\":[\"bzzr://47cb1360e18683674912a22880adb6c2280d01ce1a1d01587f00fa247c9585bf\"]},\"openzeppelin-eth/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x89f7c5e197e875297177796dec757804802ae863827bc34f95b05ff14c3f3af5\",\"urls\":[\"bzzr://4e793c2d2f905f758d5fd8676fcc90d051d3fe07a5d003cc016c6f281bb77a78\"]},\"openzeppelin-eth/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xf889248d3a76965eb24bb318d068d9e06c80ca342e73a9c3610ac8c2e4594436\",\"urls\":[\"bzzr://3e66f2d9aba3e80c9743b4857c89dc8dcbc44472d2f63f79afb49181d151704b\"]},\"openzeppelin-eth/contracts/token/ERC721/StandaloneERC721.sol\":{\"keccak256\":\"0xa8164398f3bddce9e1712b67c5c93ba2e6c55dba0e357743d465a142d31d7a10\",\"urls\":[\"bzzr://fa015f9d84c544e0e0c0a74d278358591130975aaa74af8c4815292d21a531c3\"]},\"openzeppelin-eth/contracts/utils/Address.sol\":{\"keccak256\":\"0x864c25332d7ccfb46ec8fa0a3c599cceed0f95726f91d5faf748226bf5df626b\",\"urls\":[\"bzzr://8337e6c40f6adc7fd0e1162f47572249d83d7e6c8161eb66c49224a8f5d9418f\"]},\"zos-lib/contracts/Initializable.sol\":{\"keccak256\":\"0xac4cc87395794e21e95549a1b4002881621d59878c4129d534a0089ce5cf7212\",\"urls\":[\"bzzr://1725ac3e1941f8e2bf5c1966abd66bd744d40c85ae8195eb697ec3256bc1fc39\"]}},\"version\":1}",
  "bytecode": "0x608060405261019f805460ff1916905534801561001b57600080fd5b506120e58061002b6000396000f30060806040526004361061017f5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a7811461018457806306fdde03146101ba578063081812fc14610244578063095ea7b31461027857806318160ddd1461029e57806323b872dd146102c55780632f745c59146102ef5780633f4ba83a1461031357806342842e0e1461032857806346fbf68e146103525780634cd88b76146103735780634f6ccce71461040a57806350bb4e7f146104225780635c975abb1461048b5780636352211e146104a05780636ef8d66d146104b857806370a08231146104cd5780638129fc1c146104ee57806382dc1ec4146105035780638456cb591461052457806395d89b4114610539578063983b2d561461054e578063986502751461056f578063a22cb46514610584578063aa271e1a146105aa578063b88d4fde146105cb578063c4d66de81461063a578063c87b56dd1461065b578063d94cc0e014610673578063e985e9c51461077c575b600080fd5b34801561019057600080fd5b506101a6600160e060020a0319600435166107a3565b604080519115158252519081900360200190f35b3480156101c657600080fd5b506101cf6107c2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102095781810151838201526020016101f1565b50505050905090810190601f1680156102365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561025057600080fd5b5061025c600435610859565b60408051600160a060020a039092168252519081900360200190f35b34801561028457600080fd5b5061029c600160a060020a036004351660243561088b565b005b3480156102aa57600080fd5b506102b36108aa565b60408051918252519081900360200190f35b3480156102d157600080fd5b5061029c600160a060020a03600435811690602435166044356108b0565b3480156102fb57600080fd5b506102b3600160a060020a03600435166024356108d1565b34801561031f57600080fd5b5061029c61091e565b34801561033457600080fd5b5061029c600160a060020a036004358116906024351660443561097a565b34801561035e57600080fd5b506101a6600160a060020a0360043516610996565b34801561037f57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261029c94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506109b09650505050505050565b34801561041657600080fd5b506102b3600435610ad1565b34801561042e57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101a6948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610b069650505050505050565b34801561049757600080fd5b506101a6610b3a565b3480156104ac57600080fd5b5061025c600435610b44565b3480156104c457600080fd5b5061029c610b68565b3480156104d957600080fd5b506102b3600160a060020a0360043516610b73565b3480156104fa57600080fd5b5061029c610ba6565b34801561050f57600080fd5b5061029c600160a060020a0360043516610c9d565b34801561053057600080fd5b5061029c610cbd565b34801561054557600080fd5b506101cf610d1b565b34801561055a57600080fd5b5061029c600160a060020a0360043516610d7c565b34801561057b57600080fd5b5061029c610d99565b34801561059057600080fd5b5061029c600160a060020a03600435166024351515610da2565b3480156105b657600080fd5b506101a6600160a060020a0360043516610dbd565b3480156105d757600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261029c94600160a060020a038135811695602480359092169560443595369560849401918190840183828082843750949750610dd19650505050505050565b34801561064657600080fd5b5061029c600160a060020a0360043516610df9565b34801561066757600080fd5b506101cf600435610ed1565b34801561067f57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261029c94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750949750610f869650505050505050565b34801561078857600080fd5b506101a6600160a060020a03600435811690602435166110f6565b600160e060020a03191660009081526033602052604090205460ff1690565b60d28054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561084e5780601f106108235761010080835404028352916020019161084e565b820191906000526020600020905b81548152906001019060200180831161083157829003601f168201915b505050505090505b90565b600061086482611124565b151561086f57600080fd5b50600090815260676020526040902054600160a060020a031690565b61019f5460ff161561089c57600080fd5b6108a68282611141565b5050565b609e5490565b61019f5460ff16156108c157600080fd5b6108cc8383836111f7565b505050565b60006108dc83610b73565b82106108e757600080fd5b600160a060020a0383166000908152609c6020526040902080548390811061090b57fe5b9060005260206000200154905092915050565b61092733610996565b151561093257600080fd5b61019f5460ff16151561094457600080fd5b61019f805460ff191690556040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a1565b6108cc8383836020604051908101604052806000815250610dd1565b60006109aa61016c8363ffffffff61128516565b92915050565b60008054610100900460ff16806109ca57506109ca6112bc565b806109d8575060005460ff16155b1515610a30576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16610a596112c6565b1515610a6457600080fd5b8251610a779060d2906020860190611fc5565b508151610a8b9060d3906020850190611fc5565b50610ab57f5b5e139f000000000000000000000000000000000000000000000000000000006112f6565b600080549115156101000261ff00199092169190911790555050565b6000610adb6108aa565b8210610ae657600080fd5b609e805483908110610af457fe5b90600052602060002001549050919050565b6000610b1133610dbd565b1515610b1c57600080fd5b610b268484611332565b610b308383611381565b5060019392505050565b61019f5460ff1690565b600081815260666020526040812054600160a060020a03168015156109aa57600080fd5b610b71336113b4565b565b6000600160a060020a0382161515610b8a57600080fd5b50600160a060020a031660009081526068602052604090205490565b60008054610100900460ff1680610bc05750610bc06112bc565b80610bce575060005460ff16155b1515610c26576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16610c4f6112c6565b1515610c5a57600080fd5b610c837f780e9d63000000000000000000000000000000000000000000000000000000006112f6565b600080549115156101000261ff0019909216919091179055565b610ca633610996565b1515610cb157600080fd5b610cba816113fd565b50565b610cc633610996565b1515610cd157600080fd5b61019f5460ff1615610ce257600080fd5b61019f805460ff191660011790556040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a1565b60d38054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561084e5780601f106108235761010080835404028352916020019161084e565b610d8533610dbd565b1515610d9057600080fd5b610cba81611446565b610b713361148f565b61019f5460ff1615610db357600080fd5b6108a682826114d8565b60006109aa6101078363ffffffff61128516565b610ddc8484846108b0565b610de88484848461155c565b1515610df357600080fd5b50505050565b60008054610100900460ff1680610e135750610e136112bc565b80610e21575060005460ff16155b1515610e79576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16610ea26112c6565b1515610ead57600080fd5b610eb6826116c9565b600080549115156101000261ff001990921691909117905550565b6060610edc82611124565b1515610ee757600080fd5b600082815260d4602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610f7a5780601f10610f4f57610100808354040283529160200191610f7a565b820191906000526020600020905b815481529060010190602001808311610f5d57829003601f168201915b50505050509050919050565b600080548190610100900460ff1680610fa25750610fa26112bc565b80610fb0575060005460ff16155b1515611008576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16611031611773565b611039610ba6565b61104386866109b0565b61104c30611845565b611054610d99565b61105d30610df9565b611065610b68565b600091505b835182101561109e57611093848381518110151561108457fe5b90602001906020020151611446565b81600101915061106a565b600091505b82518210156110d7576110cc83838151811015156110bd57fe5b906020019060200201516113fd565b8160010191506110a3565b600080549115156101000261ff00199092169190911790555050505050565b600160a060020a03918216600090815260696020908152604080832093909416825291909152205460ff1690565b600090815260666020526040902054600160a060020a0316151590565b600061114c82610b44565b9050600160a060020a03838116908216141561116757600080fd5b33600160a060020a0382161480611183575061118381336110f6565b151561118e57600080fd5b600082815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6112013382611915565b151561120c57600080fd5b600160a060020a038216151561122157600080fd5b61122b8382611974565b61123583826119e3565b61123f8282611aea565b8082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000600160a060020a038216151561129c57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b303b8015905b5090565b60006112f17f80ac58cd000000000000000000000000000000000000000000000000000000006107a3565b905090565b600160e060020a0319808216141561130d57600080fd5b600160e060020a0319166000908152603360205260409020805460ff19166001179055565b61133c8282611b33565b609e80546000838152609f60205260408120829055600182018355919091527fcfe2a20ff701a1f3e14f63bd70d6c6bc6fba8172ec6d5a505cdab3927c0a9de6015550565b61138a82611124565b151561139557600080fd5b600082815260d46020908152604090912082516108cc92840190611fc5565b6113c661016c8263ffffffff611b8e16565b604051600160a060020a038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b61140f61016c8263ffffffff611bc516565b604051600160a060020a038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b6114586101078263ffffffff611bc516565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6114a16101078263ffffffff611b8e16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b600160a060020a0382163314156114ee57600080fd5b336000818152606960209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b60008061157185600160a060020a0316611bff565b151561158057600191506116c0565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03898116602485015260448401889052608060648501908152875160848601528751918a169463150b7a0294938c938b938b93909160a490910190602085019080838360005b838110156116135781810151838201526020016115fb565b50505050905090810190601f1680156116405780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561166257600080fd5b505af1158015611676573d6000803e3d6000fd5b505050506040513d602081101561168c57600080fd5b5051600160e060020a031981167f150b7a020000000000000000000000000000000000000000000000000000000014925090505b50949350505050565b60008054610100900460ff16806116e357506116e36112bc565b806116f1575060005460ff16155b1515611749576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16610eb682611c07565b60008054610100900460ff168061178d575061178d6112bc565b8061179b575060005460ff16155b15156117f3576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff1661181c611cc0565b610c837f80ac58cd000000000000000000000000000000000000000000000000000000006112f6565b60008054610100900460ff168061185f575061185f6112bc565b8061186d575060005460ff16155b15156118c5576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff166118ee6112c6565b15156118f957600080fd5b611901611d8a565b151561190c57600080fd5b610eb682611db5565b60008061192183610b44565b905080600160a060020a031684600160a060020a0316148061195c575083600160a060020a031661195184610859565b600160a060020a0316145b8061196c575061196c81856110f6565b949350505050565b81600160a060020a031661198782610b44565b600160a060020a03161461199a57600080fd5b600081815260676020526040902054600160a060020a0316156108a6576000908152606760205260409020805473ffffffffffffffffffffffffffffffffffffffff1916905550565b60008060006119f28585611e6e565b6000848152609d6020908152604080832054600160a060020a0389168452609c90925290912054909350611a2d90600163ffffffff611f0416565b600160a060020a0386166000908152609c6020526040902080549193509083908110611a5557fe5b9060005260206000200154905080609c600087600160a060020a0316600160a060020a0316815260200190815260200160002084815481101515611a9557fe5b6000918252602080832090910192909255600160a060020a0387168152609c90915260409020805490611acc90600019830161203f565b506000938452609d6020526040808520859055908452909220555050565b6000611af68383611f1b565b50600160a060020a039091166000908152609c6020908152604080832080546001810182559084528284208101859055938352609d909152902055565b600160a060020a0382161515611b4857600080fd5b611b528282611aea565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600160a060020a0381161515611ba357600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b600160a060020a0381161515611bda57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000903b1190565b60008054610100900460ff1680611c215750611c216112bc565b80611c2f575060005460ff16155b1515611c87576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16611cb182610996565b1515610eb657610eb6826113fd565b60008054610100900460ff1680611cda5750611cda6112bc565b80611ce8575060005460ff16155b1515611d40576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16610c837f01ffc9a7000000000000000000000000000000000000000000000000000000006112f6565b60006112f17f5b5e139f000000000000000000000000000000000000000000000000000000006107a3565b60008054610100900460ff1680611dcf5750611dcf6112bc565b80611ddd575060005460ff16155b1515611e35576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16611e5f82610dbd565b1515610eb657610eb682611446565b81600160a060020a0316611e8182610b44565b600160a060020a031614611e9457600080fd5b600160a060020a038216600090815260686020526040902054611ebe90600163ffffffff611f0416565b600160a060020a03909216600090815260686020908152604080832094909455918152606690915220805473ffffffffffffffffffffffffffffffffffffffff19169055565b60008083831115611f1457600080fd5b5050900390565b600081815260666020526040902054600160a060020a031615611f3d57600080fd5b6000818152606660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915583526068909152902054611f8c906001611fac565b600160a060020a0390921660009081526068602052604090209190915550565b600082820183811015611fbe57600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061200657805160ff1916838001178555612033565b82800160010185558215612033579182015b82811115612033578251825591602001919060010190612018565b506112c292915061205f565b8154818355818111156108cc576000838152602090206108cc9181019083015b61085691905b808211156112c257600081556001016120655600436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564000000000000000000000000000000000000a165627a7a72305820be487abc903fdd0560bd92722b32551910c497277e732180a86ef503a7c50f290029",
  "deployedBytecode": "0x60806040526004361061017f5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a7811461018457806306fdde03146101ba578063081812fc14610244578063095ea7b31461027857806318160ddd1461029e57806323b872dd146102c55780632f745c59146102ef5780633f4ba83a1461031357806342842e0e1461032857806346fbf68e146103525780634cd88b76146103735780634f6ccce71461040a57806350bb4e7f146104225780635c975abb1461048b5780636352211e146104a05780636ef8d66d146104b857806370a08231146104cd5780638129fc1c146104ee57806382dc1ec4146105035780638456cb591461052457806395d89b4114610539578063983b2d561461054e578063986502751461056f578063a22cb46514610584578063aa271e1a146105aa578063b88d4fde146105cb578063c4d66de81461063a578063c87b56dd1461065b578063d94cc0e014610673578063e985e9c51461077c575b600080fd5b34801561019057600080fd5b506101a6600160e060020a0319600435166107a3565b604080519115158252519081900360200190f35b3480156101c657600080fd5b506101cf6107c2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102095781810151838201526020016101f1565b50505050905090810190601f1680156102365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561025057600080fd5b5061025c600435610859565b60408051600160a060020a039092168252519081900360200190f35b34801561028457600080fd5b5061029c600160a060020a036004351660243561088b565b005b3480156102aa57600080fd5b506102b36108aa565b60408051918252519081900360200190f35b3480156102d157600080fd5b5061029c600160a060020a03600435811690602435166044356108b0565b3480156102fb57600080fd5b506102b3600160a060020a03600435166024356108d1565b34801561031f57600080fd5b5061029c61091e565b34801561033457600080fd5b5061029c600160a060020a036004358116906024351660443561097a565b34801561035e57600080fd5b506101a6600160a060020a0360043516610996565b34801561037f57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261029c94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506109b09650505050505050565b34801561041657600080fd5b506102b3600435610ad1565b34801561042e57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101a6948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610b069650505050505050565b34801561049757600080fd5b506101a6610b3a565b3480156104ac57600080fd5b5061025c600435610b44565b3480156104c457600080fd5b5061029c610b68565b3480156104d957600080fd5b506102b3600160a060020a0360043516610b73565b3480156104fa57600080fd5b5061029c610ba6565b34801561050f57600080fd5b5061029c600160a060020a0360043516610c9d565b34801561053057600080fd5b5061029c610cbd565b34801561054557600080fd5b506101cf610d1b565b34801561055a57600080fd5b5061029c600160a060020a0360043516610d7c565b34801561057b57600080fd5b5061029c610d99565b34801561059057600080fd5b5061029c600160a060020a03600435166024351515610da2565b3480156105b657600080fd5b506101a6600160a060020a0360043516610dbd565b3480156105d757600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261029c94600160a060020a038135811695602480359092169560443595369560849401918190840183828082843750949750610dd19650505050505050565b34801561064657600080fd5b5061029c600160a060020a0360043516610df9565b34801561066757600080fd5b506101cf600435610ed1565b34801561067f57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261029c94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750949750610f869650505050505050565b34801561078857600080fd5b506101a6600160a060020a03600435811690602435166110f6565b600160e060020a03191660009081526033602052604090205460ff1690565b60d28054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561084e5780601f106108235761010080835404028352916020019161084e565b820191906000526020600020905b81548152906001019060200180831161083157829003601f168201915b505050505090505b90565b600061086482611124565b151561086f57600080fd5b50600090815260676020526040902054600160a060020a031690565b61019f5460ff161561089c57600080fd5b6108a68282611141565b5050565b609e5490565b61019f5460ff16156108c157600080fd5b6108cc8383836111f7565b505050565b60006108dc83610b73565b82106108e757600080fd5b600160a060020a0383166000908152609c6020526040902080548390811061090b57fe5b9060005260206000200154905092915050565b61092733610996565b151561093257600080fd5b61019f5460ff16151561094457600080fd5b61019f805460ff191690556040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a1565b6108cc8383836020604051908101604052806000815250610dd1565b60006109aa61016c8363ffffffff61128516565b92915050565b60008054610100900460ff16806109ca57506109ca6112bc565b806109d8575060005460ff16155b1515610a30576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16610a596112c6565b1515610a6457600080fd5b8251610a779060d2906020860190611fc5565b508151610a8b9060d3906020850190611fc5565b50610ab57f5b5e139f000000000000000000000000000000000000000000000000000000006112f6565b600080549115156101000261ff00199092169190911790555050565b6000610adb6108aa565b8210610ae657600080fd5b609e805483908110610af457fe5b90600052602060002001549050919050565b6000610b1133610dbd565b1515610b1c57600080fd5b610b268484611332565b610b308383611381565b5060019392505050565b61019f5460ff1690565b600081815260666020526040812054600160a060020a03168015156109aa57600080fd5b610b71336113b4565b565b6000600160a060020a0382161515610b8a57600080fd5b50600160a060020a031660009081526068602052604090205490565b60008054610100900460ff1680610bc05750610bc06112bc565b80610bce575060005460ff16155b1515610c26576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16610c4f6112c6565b1515610c5a57600080fd5b610c837f780e9d63000000000000000000000000000000000000000000000000000000006112f6565b600080549115156101000261ff0019909216919091179055565b610ca633610996565b1515610cb157600080fd5b610cba816113fd565b50565b610cc633610996565b1515610cd157600080fd5b61019f5460ff1615610ce257600080fd5b61019f805460ff191660011790556040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a1565b60d38054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561084e5780601f106108235761010080835404028352916020019161084e565b610d8533610dbd565b1515610d9057600080fd5b610cba81611446565b610b713361148f565b61019f5460ff1615610db357600080fd5b6108a682826114d8565b60006109aa6101078363ffffffff61128516565b610ddc8484846108b0565b610de88484848461155c565b1515610df357600080fd5b50505050565b60008054610100900460ff1680610e135750610e136112bc565b80610e21575060005460ff16155b1515610e79576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16610ea26112c6565b1515610ead57600080fd5b610eb6826116c9565b600080549115156101000261ff001990921691909117905550565b6060610edc82611124565b1515610ee757600080fd5b600082815260d4602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610f7a5780601f10610f4f57610100808354040283529160200191610f7a565b820191906000526020600020905b815481529060010190602001808311610f5d57829003601f168201915b50505050509050919050565b600080548190610100900460ff1680610fa25750610fa26112bc565b80610fb0575060005460ff16155b1515611008576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16611031611773565b611039610ba6565b61104386866109b0565b61104c30611845565b611054610d99565b61105d30610df9565b611065610b68565b600091505b835182101561109e57611093848381518110151561108457fe5b90602001906020020151611446565b81600101915061106a565b600091505b82518210156110d7576110cc83838151811015156110bd57fe5b906020019060200201516113fd565b8160010191506110a3565b600080549115156101000261ff00199092169190911790555050505050565b600160a060020a03918216600090815260696020908152604080832093909416825291909152205460ff1690565b600090815260666020526040902054600160a060020a0316151590565b600061114c82610b44565b9050600160a060020a03838116908216141561116757600080fd5b33600160a060020a0382161480611183575061118381336110f6565b151561118e57600080fd5b600082815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6112013382611915565b151561120c57600080fd5b600160a060020a038216151561122157600080fd5b61122b8382611974565b61123583826119e3565b61123f8282611aea565b8082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000600160a060020a038216151561129c57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b303b8015905b5090565b60006112f17f80ac58cd000000000000000000000000000000000000000000000000000000006107a3565b905090565b600160e060020a0319808216141561130d57600080fd5b600160e060020a0319166000908152603360205260409020805460ff19166001179055565b61133c8282611b33565b609e80546000838152609f60205260408120829055600182018355919091527fcfe2a20ff701a1f3e14f63bd70d6c6bc6fba8172ec6d5a505cdab3927c0a9de6015550565b61138a82611124565b151561139557600080fd5b600082815260d46020908152604090912082516108cc92840190611fc5565b6113c661016c8263ffffffff611b8e16565b604051600160a060020a038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b61140f61016c8263ffffffff611bc516565b604051600160a060020a038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b6114586101078263ffffffff611bc516565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6114a16101078263ffffffff611b8e16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b600160a060020a0382163314156114ee57600080fd5b336000818152606960209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b60008061157185600160a060020a0316611bff565b151561158057600191506116c0565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03898116602485015260448401889052608060648501908152875160848601528751918a169463150b7a0294938c938b938b93909160a490910190602085019080838360005b838110156116135781810151838201526020016115fb565b50505050905090810190601f1680156116405780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561166257600080fd5b505af1158015611676573d6000803e3d6000fd5b505050506040513d602081101561168c57600080fd5b5051600160e060020a031981167f150b7a020000000000000000000000000000000000000000000000000000000014925090505b50949350505050565b60008054610100900460ff16806116e357506116e36112bc565b806116f1575060005460ff16155b1515611749576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16610eb682611c07565b60008054610100900460ff168061178d575061178d6112bc565b8061179b575060005460ff16155b15156117f3576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff1661181c611cc0565b610c837f80ac58cd000000000000000000000000000000000000000000000000000000006112f6565b60008054610100900460ff168061185f575061185f6112bc565b8061186d575060005460ff16155b15156118c5576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff166118ee6112c6565b15156118f957600080fd5b611901611d8a565b151561190c57600080fd5b610eb682611db5565b60008061192183610b44565b905080600160a060020a031684600160a060020a0316148061195c575083600160a060020a031661195184610859565b600160a060020a0316145b8061196c575061196c81856110f6565b949350505050565b81600160a060020a031661198782610b44565b600160a060020a03161461199a57600080fd5b600081815260676020526040902054600160a060020a0316156108a6576000908152606760205260409020805473ffffffffffffffffffffffffffffffffffffffff1916905550565b60008060006119f28585611e6e565b6000848152609d6020908152604080832054600160a060020a0389168452609c90925290912054909350611a2d90600163ffffffff611f0416565b600160a060020a0386166000908152609c6020526040902080549193509083908110611a5557fe5b9060005260206000200154905080609c600087600160a060020a0316600160a060020a0316815260200190815260200160002084815481101515611a9557fe5b6000918252602080832090910192909255600160a060020a0387168152609c90915260409020805490611acc90600019830161203f565b506000938452609d6020526040808520859055908452909220555050565b6000611af68383611f1b565b50600160a060020a039091166000908152609c6020908152604080832080546001810182559084528284208101859055938352609d909152902055565b600160a060020a0382161515611b4857600080fd5b611b528282611aea565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600160a060020a0381161515611ba357600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b600160a060020a0381161515611bda57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000903b1190565b60008054610100900460ff1680611c215750611c216112bc565b80611c2f575060005460ff16155b1515611c87576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16611cb182610996565b1515610eb657610eb6826113fd565b60008054610100900460ff1680611cda5750611cda6112bc565b80611ce8575060005460ff16155b1515611d40576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16610c837f01ffc9a7000000000000000000000000000000000000000000000000000000006112f6565b60006112f17f5b5e139f000000000000000000000000000000000000000000000000000000006107a3565b60008054610100900460ff1680611dcf5750611dcf6112bc565b80611ddd575060005460ff16155b1515611e35576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061207a833981519152604482015260008051602061209a833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16611e5f82610dbd565b1515610eb657610eb682611446565b81600160a060020a0316611e8182610b44565b600160a060020a031614611e9457600080fd5b600160a060020a038216600090815260686020526040902054611ebe90600163ffffffff611f0416565b600160a060020a03909216600090815260686020908152604080832094909455918152606690915220805473ffffffffffffffffffffffffffffffffffffffff19169055565b60008083831115611f1457600080fd5b5050900390565b600081815260666020526040902054600160a060020a031615611f3d57600080fd5b6000818152606660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915583526068909152902054611f8c906001611fac565b600160a060020a0390921660009081526068602052604090209190915550565b600082820183811015611fbe57600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061200657805160ff1916838001178555612033565b82800160010185558215612033579182015b82811115612033578251825591602001919060010190612018565b506112c292915061205f565b8154818355818111156108cc576000838152602090206108cc9181019083015b61085691905b808211156112c257600081556001016120655600436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564000000000000000000000000000000000000a165627a7a72305820be487abc903fdd0560bd92722b32551910c497277e732180a86ef503a7c50f290029",
  "sourceMap": "313:850:33:-;;;318:28:20;;;-1:-1:-1;;318:28:20;;;313:850:33;5:2:-1;;;;30:1;27;20:12;5:2;313:850:33;;;;;;;",
  "deployedSourceMap": "313:850:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;824:139:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;824:139:18;-1:-1:-1;;;;;;824:139:18;;;;;;;;;;;;;;;;;;;;;;;1191:70:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1191:70:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1191:70:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3758:141:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3758:141:23;;;;;;;;;-1:-1:-1;;;;;3758:141:23;;;;;;;;;;;;;;442:126:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;442:126:28;-1:-1:-1;;;;;442:126:28;;;;;;;;;2035:88:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2035:88:24;;;;;;;;;;;;;;;;;;;;721:160:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;721:160:28;-1:-1:-1;;;;;721:160:28;;;;;;;;;;;;1695:198:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1695:198:24;-1:-1:-1;;;;;1695:198:24;;;;;;;1161:95:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1161:95:20;;;;6202:193:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6202:193:23;-1:-1:-1;;;;;6202:193:23;;;;;;;;;;;;493:100:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;493:100:17;-1:-1:-1;;;;;493:100:17;;;;;688:282:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;688:282:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;688:282:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;688:282:26;;;;-1:-1:-1;688:282:26;-1:-1:-1;688:282:26;;-1:-1:-1;688:282:26;;;;;;;;-1:-1:-1;688:282:26;;-1:-1:-1;688:282:26;;-1:-1:-1;;;;;;;688:282:26;2446:138:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2446:138:24;;;;;794:218:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;794:218:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;794:218:27;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:218:27;;-1:-1:-1;794:218:27;;-1:-1:-1;;;;;;;794:218:27;524:69:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;524:69:20;;;;2651:163:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2651:163:23;;;;;685:69:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;685:69:17;;;;2299:140:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2299:140:23;-1:-1:-1;;;;;2299:140:23;;;;;989:217:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;989:217:24;;;;597:84:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;597:84:17;-1:-1:-1;;;;;597:84:17;;;;;986:93:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;986:93:20;;;;1359:74:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1359:74:26;;;;597:84:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;597:84:16;-1:-1:-1;;;;;597:84:16;;;;;685:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;685:69:16;;;;572:145:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;572:145:28;-1:-1:-1;;;;;572:145:28;;;;;;;;;493:100:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;493:100:16;-1:-1:-1;;;;;493:100:16;;;;;7074:268:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7074:268:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7074:268:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7074:268:23;;-1:-1:-1;7074:268:23;;-1:-1:-1;;;;;;;7074:268:23;302:136:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;302:136:28;-1:-1:-1;;;;;302:136:28;;;;;1620:132:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1620:132:26;;;;;444:717:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;444:717:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;444:717:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;444:717:33;;;;-1:-1:-1;444:717:33;-1:-1:-1;444:717:33;;-1:-1:-1;444:717:33;;;;;;;;-1:-1:-1;;444:717:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;444:717:33;;;;-1:-1:-1;444:717:33;-1:-1:-1;444:717:33;;-1:-1:-1;444:717:33;;;;;;;;;-1:-1:-1;;444:717:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;444:717:33;;;;-1:-1:-1;444:717:33;-1:-1:-1;444:717:33;;-1:-1:-1;444:717:33;;;;;;;;;-1:-1:-1;444:717:33;;-1:-1:-1;444:717:33;;-1:-1:-1;;;;;;;444:717:33;4683:165:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4683:165:23;-1:-1:-1;;;;;4683:165:23;;;;;;;;;;824:139:18;-1:-1:-1;;;;;;925:33:18;904:4;925:33;;;:20;:33;;;;;;;;;824:139::o;1191:70:26:-;1251:5;1244:12;;;;;;;;-1:-1:-1;;1244:12:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1230:6;;1244:12;;1251:5;;1244:12;;1251:5;1244:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1191:70;;:::o;3758:141:23:-;3817:7;3840:16;3848:7;3840;:16::i;:::-;3832:25;;;;;;;;-1:-1:-1;3870:24:23;;;;:15;:24;;;;;;-1:-1:-1;;;;;3870:24:23;;3758:141::o;442:126:28:-;734:7:20;;;;733:8;725:17;;;;;;537:26:28;551:2;555:7;537:13;:26::i;:::-;442:126;;:::o;2035:88:24:-;2101:10;:17;2035:88;:::o;721:160:28:-;734:7:20;;;;733:8;725:17;;;;;;839:37:28;858:4;864:2;868:7;839:18;:37::i;:::-;721:160;;;:::o;1695:198:24:-;1799:7;1832:16;1842:5;1832:9;:16::i;:::-;1824:24;;1816:33;;;;;;-1:-1:-1;;;;;1862:19:24;;;;;;:12;:19;;;;;:26;;1882:5;;1862:26;;;;;;;;;;;;;;1855:33;;1695:198;;;;:::o;1161:95:20:-;456:20:17;465:10;456:8;:20::i;:::-;448:29;;;;;;;;887:7:20;;;;879:16;;;;;;;;1215:7;:15;;-1:-1:-1;;1215:15:20;;;1241:10;;;;1225:5;;1241:10;1161:95::o;6202:193:23:-;6351:39;6368:4;6374:2;6378:7;6351:39;;;;;;;;;;;;;:16;:39::i;493:100:17:-;549:4;568:20;:7;580;568:20;:11;:20;:::i;:::-;561:27;493:100;-1:-1:-1;;493:100:17:o;688:282:26:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;769:28:26;:26;:28::i;:::-;761:37;;;;;;;;805:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;823:16:26;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;919:46:26;938:26;919:18;:46::i;:::-;1228:12:35;:30;;;;;;;-1:-1:-1;;1228:30:35;;;;;;;;;-1:-1:-1;;688:282:26:o;2446:138:24:-;2504:7;2535:13;:11;:13::i;:::-;2527:21;;2519:30;;;;;;2562:10;:17;;2573:5;;2562:17;;;;;;;;;;;;;;2555:24;;2446:138;;;:::o;794:218:27:-;921:4;456:20:16;465:10;456:8;:20::i;:::-;448:29;;;;;;;;935:18:27;941:2;945:7;935:5;:18::i;:::-;959:31;972:7;981:8;959:12;:31::i;:::-;-1:-1:-1;1003:4:27;794:218;;;;;:::o;524:69:20:-;581:7;;;;524:69;:::o;2651:163:23:-;2706:7;2737:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2737:20:23;2771:19;;;2763:28;;;;;685:69:17;724:25;738:10;724:13;:25::i;:::-;685:69::o;2299:140:23:-;2354:7;-1:-1:-1;;;;;2377:19:23;;;;2369:28;;;;;;-1:-1:-1;;;;;;2410:24:23;;;;;:17;:24;;;;;;;2299:140::o;989:217:24:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;1044:28:24;:26;:28::i;:::-;1036:37;;;;;;;;1152:49;1171:29;1152:18;:49::i;:::-;1228:12:35;:30;;;;;;;-1:-1:-1;;1228:30:35;;;;;;;;;989:217:24:o;597:84:17:-;456:20;465:10;456:8;:20::i;:::-;448:29;;;;;;;;657:19;668:7;657:10;:19::i;:::-;597:84;:::o;986:93:20:-;456:20:17;465:10;456:8;:20::i;:::-;448:29;;;;;;;;734:7:20;;;;733:8;725:17;;;;;;1041:7;:14;;-1:-1:-1;;1041:14:20;1051:4;1041:14;;;1066:8;;;;1041:7;;1066:8;986:93::o;1359:74:26:-;1421:7;1414:14;;;;;;;;-1:-1:-1;;1414:14:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:6;;1414:14;;1421:7;;1414:14;;1421:7;1414:14;;;;;;;;;;;;;;;;;;;;;;;;597:84:16;456:20;465:10;456:8;:20::i;:::-;448:29;;;;;;;;657:19;668:7;657:10;:19::i;685:69::-;724:25;738:10;724:13;:25::i;572:145:28:-;734:7:20;;;;733:8;725:17;;;;;;675:37:28;699:2;703:8;675:23;:37::i;493:100:16:-;549:4;568:20;:7;580;568:20;:11;:20;:::i;7074:268:23:-;7195:31;7208:4;7214:2;7218:7;7195:12;:31::i;:::-;7285:51;7311:4;7317:2;7321:7;7330:5;7285:25;:51::i;:::-;7277:60;;;;;;;;7074:268;;;;:::o;302:136:28:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;371:28:28;:26;:28::i;:::-;363:37;;;;;;;;406:27;426:6;406:19;:27::i;:::-;1228:12:35;:30;;;;;;;-1:-1:-1;;1228:30:35;;;;;;;;;-1:-1:-1;302:136:28:o;1620:132:26:-;1676:6;1698:16;1706:7;1698;:16::i;:::-;1690:25;;;;;;;;1728:19;;;;:10;:19;;;;;;;;;1721:26;;;;;;-1:-1:-1;;1721:26:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1728:19;;1721:26;;1728:19;1721:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:132;;;:::o;444:717:33:-;1000:9;1024:12:35;;1000:9:33;;1024:12:35;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;555:19:33;:17;:19::i;:::-;580:29;:27;:29::i;:::-;615:39;641:4;647:6;615:25;:39::i;:::-;726:48;768:4;726:33;:48::i;:::-;780:16;:14;:16::i;:::-;803:40;837:4;803:25;:40::i;:::-;849:16;:14;:16::i;:::-;1012:1;1000:13;;995:82;1019:7;:14;1015:1;:18;995:82;;;1048:22;1059:7;1067:1;1059:10;;;;;;;;;;;;;;;;;;1048;:22::i;:::-;1035:3;;;;;995:82;;;1092:1;1088:5;;1083:74;1099:7;:14;1095:1;:18;1083:74;;;1128:22;1139:7;1147:1;1139:10;;;;;;;;;;;;;;;;;;1128;:22::i;:::-;1115:3;;;;;1083:74;;;1228:12:35;:30;;;;;;;-1:-1:-1;;1228:30:35;;;;;;;;;-1:-1:-1;;;;;444:717:33:o;4683:165:23:-;-1:-1:-1;;;;;4808:25:23;;;4787:4;4808:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4683:165::o;7519:142::-;7576:4;7604:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7604:20:23;7637:19;;;7519:142::o;3217:270::-;3276:13;3292:16;3300:7;3292;:16::i;:::-;3276:32;-1:-1:-1;;;;;;3322:11:23;;;;;;;;3314:20;;;;;;3348:10;-1:-1:-1;;;;;3348:19:23;;;;:58;;;3371:35;3388:5;3395:10;3371:16;:35::i;:::-;3340:67;;;;;;;;3414:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;3414:29:23;-1:-1:-1;;;;;3414:29:23;;;;;;;;;3454:28;;3414:24;;3454:28;;;;;;;3217:270;;;:::o;5263:326::-;5371:39;5390:10;5402:7;5371:18;:39::i;:::-;5363:48;;;;;;;;-1:-1:-1;;;;;5425:16:23;;;;5417:25;;;;;;5449:29;5464:4;5470:7;5449:14;:29::i;:::-;5484:31;5501:4;5507:7;5484:16;:31::i;:::-;5521:24;5533:2;5537:7;5521:11;:24::i;:::-;5576:7;5572:2;-1:-1:-1;;;;;5557:27:23;5566:4;-1:-1:-1;;;;;5557:27:23;;;;;;;;;;;5263:326;;;:::o;657:166:15:-;741:4;-1:-1:-1;;;;;763:21:15;;;;755:30;;;;;;-1:-1:-1;;;;;;798:20:15;:11;:20;;;;;;;;;;;;;;;657:166::o;1349:467:35:-;1782:7;1770:20;1804:7;;;1349:467;;;:::o;1992:116:23:-;2046:4;2065:38;2083:19;2065:17;:38::i;:::-;2058:45;;1992:116;:::o;1033:154:18:-;-1:-1:-1;;;;;;1110:25:18;;;;;1102:34;;;;;;-1:-1:-1;;;;;;1142:33:18;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1142:40:18;1178:4;1142:40;;;1033:154::o;4624:169:24:-;4683:24;4695:2;4699:7;4683:11;:24::i;:::-;4741:10;:17;;4714:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;4764:24:24;;;;;;;-1:-1:-1;4624:169:24:o;1975:127:26:-;2049:16;2057:7;2049;:16::i;:::-;2041:25;;;;;;;;2072:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;870:116:17:-;925:23;:7;940;925:23;:14;:23;:::i;:::-;959:22;;-1:-1:-1;;;;;959:22:17;;;;;;;;870:116;:::o;758:108::-;810:20;:7;822;810:20;:11;:20;:::i;:::-;841;;-1:-1:-1;;;;;841:20:17;;;;;;;;758:108;:::o;::16:-;810:20;:7;822;810:20;:11;:20;:::i;:::-;841;;-1:-1:-1;;;;;841:20:16;;;;;;;;758:108;:::o;870:116::-;925:23;:7;940;925:23;:14;:23;:::i;:::-;959:22;;-1:-1:-1;;;;;959:22:16;;;;;;;;870:116;:::o;4177:199:23:-;-1:-1:-1;;;;;4252:16:23;;4258:10;4252:16;;4244:25;;;;;;4294:10;4275:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4275:34:23;;;;;;;;;;;;:45;;-1:-1:-1;;4275:45:23;;;;;;;;;;4331:40;;;;;;;4275:34;;4294:10;4331:40;;;;;;;;;;;4177:199;;:::o;11140:343::-;11277:4;11344:13;11296:15;:2;-1:-1:-1;;;;;11296:13:23;;:15::i;:::-;11295:16;11291:48;;;11328:4;11321:11;;;;11291:48;11360:77;;;;;11404:10;11360:77;;;;;;-1:-1:-1;;;;;11360:77:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;;;;11404:10;11416:4;;11422:7;;11431:5;;11360:77;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11360:77:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11360:77:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11360:77:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11360:77:23;-1:-1:-1;;;;;;11451:26:23;;11461:16;11451:26;;-1:-1:-1;11360:77:23;-1:-1:-1;11140:343:23;;;;;;;;:::o;351:95:20:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;412:29:20;434:6;412:21;:29::i;1788:200:23:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;1845:19:23;:17;:19::i;:::-;1944:39;1963:19;1944:18;:39::i;322:189:27:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;391:28:27;:26;:28::i;:::-;383:37;;;;;;;;434:36;:34;:36::i;:::-;426:45;;;;;;;;477:29;499:6;477:21;:29::i;8006:432:23:-;8115:4;8129:13;8145:16;8153:7;8145;:16::i;:::-;8129:32;;8339:5;-1:-1:-1;;;;;8328:16:23;:7;-1:-1:-1;;;;;8328:16:23;;:57;;;;8378:7;-1:-1:-1;;;;;8354:31:23;:20;8366:7;8354:11;:20::i;:::-;-1:-1:-1;;;;;8354:31:23;;8328:57;:99;;;;8395:32;8412:5;8419:7;8395:16;:32::i;:::-;8313:120;8006:432;-1:-1:-1;;;;8006:432:23:o;9475:211::-;9574:5;-1:-1:-1;;;;;9554:25:23;:16;9562:7;9554;:16::i;:::-;-1:-1:-1;;;;;9554:25:23;;9546:34;;;;;;9626:1;9590:24;;;:15;:24;;;;;;-1:-1:-1;;;;;9590:24:23;:38;9586:96;;9673:1;9638:24;;;:15;:24;;;;;:37;;-1:-1:-1;;9638:37:23;;;-1:-1:-1;9475:211:23:o;3345:1020:24:-;3598:18;3651:22;3714:17;3417:37;3440:4;3446:7;3417:22;:37::i;:::-;3619:26;;;;:17;:26;;;;;;;;;-1:-1:-1;;;;;3676:18:24;;;;:12;:18;;;;;;:25;3619:26;;-1:-1:-1;3676:32:24;;3706:1;3676:32;:29;:32;:::i;:::-;-1:-1:-1;;;;;3734:18:24;;;;;;:12;:18;;;;;:34;;3651:57;;-1:-1:-1;3734:18:24;3651:57;;3734:34;;;;;;;;;;;;;;3714:54;;3808:9;3775:12;:18;3788:4;-1:-1:-1;;;;;3775:18:24;-1:-1:-1;;;;;3775:18:24;;;;;;;;;;;;3794:10;3775:30;;;;;;;;;;;;;;;;;;;;;:42;;;;-1:-1:-1;;;;;3895:18:24;;;;:12;:18;;;;;;:27;;;;;-1:-1:-1;;3895:27:24;;;:::i;:::-;-1:-1:-1;4312:1:24;4283:26;;;:17;:26;;;;;;:30;;;4319:28;;;;;;:41;-1:-1:-1;;3345:1020:24:o;2845:223::-;2946:14;2910:30;2928:2;2932:7;2910:17;:30::i;:::-;-1:-1:-1;;;;;;2963:16:24;;;;;;;:12;:16;;;;;;;;:23;;39:1:-1;23:18;;45:23;;2992:30:24;;;;;;;;;;;3028:26;;;:17;:26;;;;;:35;2845:223::o;8685:163:23:-;-1:-1:-1;;;;;8752:16:23;;;;8744:25;;;;;;8775:24;8787:2;8791:7;8775:11;:24::i;:::-;8810:33;;8835:7;;-1:-1:-1;;;;;8810:33:23;;;8827:1;;8810:33;;8827:1;;8810:33;8685:163;;:::o;443:136:15:-;-1:-1:-1;;;;;518:21:15;;;;510:30;;;;;;-1:-1:-1;;;;;546:20:15;569:5;546:20;;;;;;;;;;;:28;;-1:-1:-1;;546:28:15;;;443:136::o;245:132::-;-1:-1:-1;;;;;317:21:15;;;;309:30;;;;;;-1:-1:-1;;;;;345:20:15;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;345:27:15;368:4;345:27;;;245:132::o;450:582:34:-;510:4;985:20;;1019:8;;450:582::o;295:121:17:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;361:16:17;370:6;361:8;:16::i;:::-;360:17;356:56;;;387:18;398:6;387:10;:18::i;640:101:18:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;697:39:18;716:19;697:18;:39::i;974:123:26:-;1028:4;1047:45;1065:26;1047:17;:45::i;295:121:16:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;361:16:16;370:6;361:8;:16::i;:::-;360:17;356:56;;;387:18;398:6;387:10;:18::i;10426:211:23:-;10526:4;-1:-1:-1;;;;;10506:24:23;:16;10514:7;10506;:16::i;:::-;-1:-1:-1;;;;;10506:24:23;;10498:33;;;;;;-1:-1:-1;;;;;10563:23:23;;;;;;:17;:23;;;;;;:30;;10591:1;10563:30;:27;:30;:::i;:::-;-1:-1:-1;;;;;10537:23:23;;;;;;;:17;:23;;;;;;;;:56;;;;10599:20;;;:11;:20;;;;:33;;-1:-1:-1;;10599:33:23;;;10426:211::o;1079:131:21:-;1137:7;;1160:6;;;;1152:15;;;;;;-1:-1:-1;;1185:5:21;;;1079:131::o;9947:202:23:-;10052:1;10020:20;;;:11;:20;;;;;;-1:-1:-1;;;;;10020:20:23;:34;10012:43;;;;;;10061:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;10061:25:23;-1:-1:-1;;;;;10061:25:23;;;;;;;;10116:21;;:17;:21;;;;;;:28;;-1:-1:-1;10116:25:23;:28::i;:::-;-1:-1:-1;;;;;10092:21:23;;;;;;;:17;:21;;;;;:52;;;;-1:-1:-1;9947:202:23:o;1273:131:21:-;1331:7;1358:5;;;1377:6;;;;1369:15;;;;;;1398:1;1273:131;-1:-1:-1;;;1273:131:21:o;313:850:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;313:850:33;;;-1:-1:-1;313:850:33;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.4.24;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\nimport \"./ERC721MetadataMintable.sol\";\nimport \"./ERC721Pausable.sol\";\n\n\n/**\n * @title Standard ERC721 token, with minting and pause functionality.\n *\n */\ncontract StandaloneERC721\n  is Initializable, ERC721, ERC721Enumerable, ERC721Metadata, ERC721MetadataMintable, ERC721Pausable\n{\n  function initialize(string name, string symbol, address[] minters, address[] pausers) public initializer {\n    ERC721.initialize();\n    ERC721Enumerable.initialize();\n    ERC721Metadata.initialize(name, symbol);\n\n    // Initialize the minter and pauser roles, and renounce them\n    ERC721MetadataMintable.initialize(address(this));\n    renounceMinter();\n\n    ERC721Pausable.initialize(address(this));\n    renouncePauser();\n\n    // Add the requested minters and pausers (this can be done after renouncing since\n    // these are the internal calls)\n    for (uint256 i = 0; i < minters.length; ++i) {\n      _addMinter(minters[i]);\n    }\n\n    for (i = 0; i < pausers.length; ++i) {\n      _addPauser(pausers[i]);\n    }\n  }\n}\n",
  "sourcePath": "openzeppelin-eth/contracts/token/ERC721/StandaloneERC721.sol",
  "ast": {
    "absolutePath": "openzeppelin-eth/contracts/token/ERC721/StandaloneERC721.sol",
    "exportedSymbols": {
      "StandaloneERC721": [
        15958
      ]
    },
    "id": 15959,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15846,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:33"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 15847,
        "nodeType": "ImportDirective",
        "scope": 15959,
        "sourceUnit": 16034,
        "src": "26:45:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 15848,
        "nodeType": "ImportDirective",
        "scope": 15959,
        "sourceUnit": 15016,
        "src": "72:22:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 15849,
        "nodeType": "ImportDirective",
        "scope": 15959,
        "sourceUnit": 15324,
        "src": "95:32:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 15850,
        "nodeType": "ImportDirective",
        "scope": 15959,
        "sourceUnit": 15507,
        "src": "128:30:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "./ERC721MetadataMintable.sol",
        "id": 15851,
        "nodeType": "ImportDirective",
        "scope": 15959,
        "sourceUnit": 15577,
        "src": "159:38:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "./ERC721Pausable.sol",
        "id": 15852,
        "nodeType": "ImportDirective",
        "scope": 15959,
        "sourceUnit": 15667,
        "src": "198:30:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15853,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16033,
              "src": "344:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$16033",
                "typeString": "contract Initializable"
              }
            },
            "id": 15854,
            "nodeType": "InheritanceSpecifier",
            "src": "344:13:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15855,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15015,
              "src": "359:6:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$15015",
                "typeString": "contract ERC721"
              }
            },
            "id": 15856,
            "nodeType": "InheritanceSpecifier",
            "src": "359:6:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15857,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15323,
              "src": "367:16:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$15323",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 15858,
            "nodeType": "InheritanceSpecifier",
            "src": "367:16:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15859,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15506,
              "src": "385:14:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$15506",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 15860,
            "nodeType": "InheritanceSpecifier",
            "src": "385:14:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15861,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15576,
              "src": "401:22:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$15576",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 15862,
            "nodeType": "InheritanceSpecifier",
            "src": "401:22:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15863,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15666,
              "src": "425:14:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$15666",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 15864,
            "nodeType": "InheritanceSpecifier",
            "src": "425:14:33"
          }
        ],
        "contractDependencies": [
          13927,
          14046,
          14106,
          14116,
          14205,
          15015,
          15323,
          15506,
          15576,
          15666,
          15772,
          15802,
          15828,
          16033
        ],
        "contractKind": "contract",
        "documentation": "@title Standard ERC721 token, with minting and pause functionality.\n ",
        "fullyImplemented": true,
        "id": 15958,
        "linearizedBaseContracts": [
          15958,
          15666,
          14205,
          14046,
          15576,
          13927,
          15506,
          15828,
          15323,
          15802,
          15015,
          15772,
          14106,
          14116,
          16033
        ],
        "name": "StandaloneERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15956,
              "nodeType": "Block",
              "src": "549:612:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15879,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15015,
                        "src": "555:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$15015_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 15881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14505,
                      "src": "555:17:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "555:19:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15883,
                  "nodeType": "ExpressionStatement",
                  "src": "555:19:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15884,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15323,
                        "src": "580:16:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$15323_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 15886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15064,
                      "src": "580:27:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:29:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15888,
                  "nodeType": "ExpressionStatement",
                  "src": "580:29:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15892,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15866,
                        "src": "641:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15893,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15868,
                        "src": "647:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15889,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15506,
                        "src": "615:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$15506_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 15891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15407,
                      "src": "615:25:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 15894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "615:39:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15895,
                  "nodeType": "ExpressionStatement",
                  "src": "615:39:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15900,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16099,
                            "src": "768:4:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$15958",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$15958",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 15899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "760:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 15901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "760:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15896,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15576,
                        "src": "726:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$15576_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 15898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15545,
                      "src": "726:33:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:48:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15903,
                  "nodeType": "ExpressionStatement",
                  "src": "726:48:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 15904,
                      "name": "renounceMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13890,
                      "src": "780:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "780:16:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15906,
                  "nodeType": "ExpressionStatement",
                  "src": "780:16:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15911,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16099,
                            "src": "837:4:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$15958",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$15958",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 15910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "829:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 15912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "829:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15907,
                        "name": "ERC721Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15666,
                        "src": "803:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Pausable_$15666_$",
                          "typeString": "type(contract ERC721Pausable)"
                        }
                      },
                      "id": 15909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15607,
                      "src": "803:25:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "803:40:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15914,
                  "nodeType": "ExpressionStatement",
                  "src": "803:40:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 15915,
                      "name": "renouncePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14009,
                      "src": "849:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:16:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15917,
                  "nodeType": "ExpressionStatement",
                  "src": "849:16:33"
                },
                {
                  "body": {
                    "id": 15935,
                    "nodeType": "Block",
                    "src": "1040:37:33",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 15930,
                                "name": "minters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15871,
                                "src": "1059:7:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 15932,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 15931,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15919,
                                "src": "1067:1:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1059:10:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 15929,
                            "name": "_addMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13906,
                            "src": "1048:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 15933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1048:22:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15934,
                        "nodeType": "ExpressionStatement",
                        "src": "1048:22:33"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 15922,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15919,
                      "src": "1015:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15923,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15871,
                        "src": "1019:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 15924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1019:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1015:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15936,
                  "initializationExpression": {
                    "assignments": [
                      15919
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 15919,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 15957,
                        "src": "1000:9:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 15918,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1000:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 15921,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 15920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1012:1:33",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1000:13:33"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 15927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1035:3:33",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 15926,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15919,
                        "src": "1037:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15928,
                    "nodeType": "ExpressionStatement",
                    "src": "1035:3:33"
                  },
                  "nodeType": "ForStatement",
                  "src": "995:82:33"
                },
                {
                  "body": {
                    "id": 15954,
                    "nodeType": "Block",
                    "src": "1120:37:33",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 15949,
                                "name": "pausers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15874,
                                "src": "1139:7:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 15951,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 15950,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15919,
                                "src": "1147:1:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1139:10:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 15948,
                            "name": "_addPauser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14025,
                            "src": "1128:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 15952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1128:22:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15953,
                        "nodeType": "ExpressionStatement",
                        "src": "1128:22:33"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 15941,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15919,
                      "src": "1095:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15942,
                        "name": "pausers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15874,
                        "src": "1099:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 15943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1099:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1095:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15955,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 15939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 15937,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15919,
                        "src": "1088:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 15938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1092:1:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1088:5:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15940,
                    "nodeType": "ExpressionStatement",
                    "src": "1088:5:33"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 15946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1115:3:33",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 15945,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15919,
                        "src": "1117:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15947,
                    "nodeType": "ExpressionStatement",
                    "src": "1115:3:33"
                  },
                  "nodeType": "ForStatement",
                  "src": "1083:74:33"
                }
              ]
            },
            "documentation": null,
            "id": 15957,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 15877,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15876,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16014,
                  "src": "537:11:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "537:11:33"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15866,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 15957,
                  "src": "464:11:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15865,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15868,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 15957,
                  "src": "477:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15867,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15871,
                  "name": "minters",
                  "nodeType": "VariableDeclaration",
                  "scope": 15957,
                  "src": "492:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15869,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "492:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 15870,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "492:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15874,
                  "name": "pausers",
                  "nodeType": "VariableDeclaration",
                  "scope": 15957,
                  "src": "511:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15872,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "511:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 15873,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "511:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "463:66:33"
            },
            "payable": false,
            "returnParameters": {
              "id": 15878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:33"
            },
            "scope": 15958,
            "src": "444:717:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 15959,
        "src": "313:850:33"
      }
    ],
    "src": "0:1164:33"
  },
  "legacyAST": {
    "absolutePath": "openzeppelin-eth/contracts/token/ERC721/StandaloneERC721.sol",
    "exportedSymbols": {
      "StandaloneERC721": [
        15958
      ]
    },
    "id": 15959,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15846,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:33"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 15847,
        "nodeType": "ImportDirective",
        "scope": 15959,
        "sourceUnit": 16034,
        "src": "26:45:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 15848,
        "nodeType": "ImportDirective",
        "scope": 15959,
        "sourceUnit": 15016,
        "src": "72:22:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 15849,
        "nodeType": "ImportDirective",
        "scope": 15959,
        "sourceUnit": 15324,
        "src": "95:32:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 15850,
        "nodeType": "ImportDirective",
        "scope": 15959,
        "sourceUnit": 15507,
        "src": "128:30:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "./ERC721MetadataMintable.sol",
        "id": 15851,
        "nodeType": "ImportDirective",
        "scope": 15959,
        "sourceUnit": 15577,
        "src": "159:38:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "./ERC721Pausable.sol",
        "id": 15852,
        "nodeType": "ImportDirective",
        "scope": 15959,
        "sourceUnit": 15667,
        "src": "198:30:33",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15853,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16033,
              "src": "344:13:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$16033",
                "typeString": "contract Initializable"
              }
            },
            "id": 15854,
            "nodeType": "InheritanceSpecifier",
            "src": "344:13:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15855,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15015,
              "src": "359:6:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$15015",
                "typeString": "contract ERC721"
              }
            },
            "id": 15856,
            "nodeType": "InheritanceSpecifier",
            "src": "359:6:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15857,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15323,
              "src": "367:16:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$15323",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 15858,
            "nodeType": "InheritanceSpecifier",
            "src": "367:16:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15859,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15506,
              "src": "385:14:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$15506",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 15860,
            "nodeType": "InheritanceSpecifier",
            "src": "385:14:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15861,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15576,
              "src": "401:22:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$15576",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 15862,
            "nodeType": "InheritanceSpecifier",
            "src": "401:22:33"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15863,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15666,
              "src": "425:14:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$15666",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 15864,
            "nodeType": "InheritanceSpecifier",
            "src": "425:14:33"
          }
        ],
        "contractDependencies": [
          13927,
          14046,
          14106,
          14116,
          14205,
          15015,
          15323,
          15506,
          15576,
          15666,
          15772,
          15802,
          15828,
          16033
        ],
        "contractKind": "contract",
        "documentation": "@title Standard ERC721 token, with minting and pause functionality.\n ",
        "fullyImplemented": true,
        "id": 15958,
        "linearizedBaseContracts": [
          15958,
          15666,
          14205,
          14046,
          15576,
          13927,
          15506,
          15828,
          15323,
          15802,
          15015,
          15772,
          14106,
          14116,
          16033
        ],
        "name": "StandaloneERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15956,
              "nodeType": "Block",
              "src": "549:612:33",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15879,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15015,
                        "src": "555:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$15015_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 15881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14505,
                      "src": "555:17:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "555:19:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15883,
                  "nodeType": "ExpressionStatement",
                  "src": "555:19:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15884,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15323,
                        "src": "580:16:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$15323_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 15886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15064,
                      "src": "580:27:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:29:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15888,
                  "nodeType": "ExpressionStatement",
                  "src": "580:29:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15892,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15866,
                        "src": "641:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15893,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15868,
                        "src": "647:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15889,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15506,
                        "src": "615:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$15506_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 15891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15407,
                      "src": "615:25:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 15894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "615:39:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15895,
                  "nodeType": "ExpressionStatement",
                  "src": "615:39:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15900,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16099,
                            "src": "768:4:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$15958",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$15958",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 15899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "760:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 15901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "760:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15896,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15576,
                        "src": "726:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$15576_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 15898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15545,
                      "src": "726:33:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:48:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15903,
                  "nodeType": "ExpressionStatement",
                  "src": "726:48:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 15904,
                      "name": "renounceMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13890,
                      "src": "780:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "780:16:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15906,
                  "nodeType": "ExpressionStatement",
                  "src": "780:16:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15911,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16099,
                            "src": "837:4:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$15958",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$15958",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 15910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "829:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 15912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "829:13:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15907,
                        "name": "ERC721Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15666,
                        "src": "803:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Pausable_$15666_$",
                          "typeString": "type(contract ERC721Pausable)"
                        }
                      },
                      "id": 15909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15607,
                      "src": "803:25:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "803:40:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15914,
                  "nodeType": "ExpressionStatement",
                  "src": "803:40:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 15915,
                      "name": "renouncePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14009,
                      "src": "849:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:16:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15917,
                  "nodeType": "ExpressionStatement",
                  "src": "849:16:33"
                },
                {
                  "body": {
                    "id": 15935,
                    "nodeType": "Block",
                    "src": "1040:37:33",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 15930,
                                "name": "minters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15871,
                                "src": "1059:7:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 15932,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 15931,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15919,
                                "src": "1067:1:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1059:10:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 15929,
                            "name": "_addMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13906,
                            "src": "1048:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 15933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1048:22:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15934,
                        "nodeType": "ExpressionStatement",
                        "src": "1048:22:33"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 15922,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15919,
                      "src": "1015:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15923,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15871,
                        "src": "1019:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 15924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1019:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1015:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15936,
                  "initializationExpression": {
                    "assignments": [
                      15919
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 15919,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 15957,
                        "src": "1000:9:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 15918,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1000:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 15921,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 15920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1012:1:33",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1000:13:33"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 15927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1035:3:33",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 15926,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15919,
                        "src": "1037:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15928,
                    "nodeType": "ExpressionStatement",
                    "src": "1035:3:33"
                  },
                  "nodeType": "ForStatement",
                  "src": "995:82:33"
                },
                {
                  "body": {
                    "id": 15954,
                    "nodeType": "Block",
                    "src": "1120:37:33",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 15949,
                                "name": "pausers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15874,
                                "src": "1139:7:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 15951,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 15950,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15919,
                                "src": "1147:1:33",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1139:10:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 15948,
                            "name": "_addPauser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14025,
                            "src": "1128:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 15952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1128:22:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15953,
                        "nodeType": "ExpressionStatement",
                        "src": "1128:22:33"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 15941,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15919,
                      "src": "1095:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 15942,
                        "name": "pausers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15874,
                        "src": "1099:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 15943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1099:14:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1095:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15955,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 15939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 15937,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15919,
                        "src": "1088:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 15938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1092:1:33",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1088:5:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15940,
                    "nodeType": "ExpressionStatement",
                    "src": "1088:5:33"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 15946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1115:3:33",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 15945,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15919,
                        "src": "1117:1:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15947,
                    "nodeType": "ExpressionStatement",
                    "src": "1115:3:33"
                  },
                  "nodeType": "ForStatement",
                  "src": "1083:74:33"
                }
              ]
            },
            "documentation": null,
            "id": 15957,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 15877,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15876,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16014,
                  "src": "537:11:33",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "537:11:33"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15866,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 15957,
                  "src": "464:11:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15865,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15868,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 15957,
                  "src": "477:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15867,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15871,
                  "name": "minters",
                  "nodeType": "VariableDeclaration",
                  "scope": 15957,
                  "src": "492:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15869,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "492:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 15870,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "492:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15874,
                  "name": "pausers",
                  "nodeType": "VariableDeclaration",
                  "scope": 15957,
                  "src": "511:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15872,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "511:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 15873,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "511:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "463:66:33"
            },
            "payable": false,
            "returnParameters": {
              "id": 15878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:33"
            },
            "scope": 15958,
            "src": "444:717:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 15959,
        "src": "313:850:33"
      }
    ],
    "src": "0:1164:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-06-11T20:54:33.516Z",
  "devdoc": {
    "methods": {
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize()": {
        "details": "Constructor function"
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.   * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    },
    "title": "Standard ERC721 token, with minting and pause functionality. "
  },
  "userdoc": {
    "methods": {}
  }
}