{
  "contractName": "ERC721MetadataMintable",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"initialize(string,string)\":{\"details\":\"Constructor function\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mintWithTokenURI(address,uint256,string)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"owner address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.   * Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"ERC721MetadataMintable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-eth/contracts/token/ERC721/ERC721MetadataMintable.sol\":\"ERC721MetadataMintable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-eth/contracts/access/Roles.sol\":{\"keccak256\":\"0x53c9df37812df0f4c36a0a6399c4a5311d22ae3c68c0ec0e20c7ba8f4f068121\",\"urls\":[\"bzzr://e48ac676564d06469b4b19b87dafc08bf5530dc69b7af072c5e726ef36bde44c\"]},\"openzeppelin-eth/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x0b1aefcdcacde470b930e6e81292c49a28d9388e81a39faef2debd4ea68b39d9\",\"urls\":[\"bzzr://a2e78ae2527d2832eefc4be977b0bc8bbe2544020dacd9af9212bc4547bbfd43\"]},\"openzeppelin-eth/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x2d84c4799438b650ca2c4f71bb0828786ab86bc10128189c82f417ff5e333192\",\"urls\":[\"bzzr://62e035c528123c5073f1df85d0705d85d45f544c134cdf15b4b4440998c67d87\"]},\"openzeppelin-eth/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x08217416f439c46726ce5274f16c6c5d36d5fec0ff1da41584df065c016ac948\",\"urls\":[\"bzzr://0d778ce7e826f62d8f1980873bd46fee85fe02a0eece9ca4c98f68ecb7815af2\"]},\"openzeppelin-eth/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xca27427124232a675642ba45303b78d5a36e1207ee222030ef249e11eba5a224\",\"urls\":[\"bzzr://013c67962737acca577ecd24e6b6c80f85b05fd03c1c75ab68f65a084f4b4cfd\"]},\"openzeppelin-eth/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xb1888bdde45860118af14b3b1a844cea1773288fc67fd32e7d702d6791487515\",\"urls\":[\"bzzr://adce23e2bacbf881728ee23b51b21724f3bc910b6398022e97c140a2de3aa14f\"]},\"openzeppelin-eth/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x1105d81f7ee6131f20de223f0a7c268dd9ca09b549bdbbb1ea0952ac3cdde8ac\",\"urls\":[\"bzzr://f3079d98d35a1ce46cc6b3f98d8700c7934f67e422359d7c5ab36828172ece72\"]},\"openzeppelin-eth/contracts/token/ERC721/ERC721MetadataMintable.sol\":{\"keccak256\":\"0x35970814caba4bb78ae40231ba7524395c1e6fa7a6a0f1a39b47d800c95742b2\",\"urls\":[\"bzzr://cefbee247affe601318695a26d7fb9c02759ab9e38686ea0e6ae68ba2c5d933f\"]},\"openzeppelin-eth/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x1bf12a88c88f967277e086e393716409d374e72a622bab9d487b3b8259bec167\",\"urls\":[\"bzzr://4091fb1378ed8262328f381fe4b4a0cfd20d04fdb90c832fcb559dca055aa9a0\"]},\"openzeppelin-eth/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x89f7c5e197e875297177796dec757804802ae863827bc34f95b05ff14c3f3af5\",\"urls\":[\"bzzr://4e793c2d2f905f758d5fd8676fcc90d051d3fe07a5d003cc016c6f281bb77a78\"]},\"openzeppelin-eth/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xf889248d3a76965eb24bb318d068d9e06c80ca342e73a9c3610ac8c2e4594436\",\"urls\":[\"bzzr://3e66f2d9aba3e80c9743b4857c89dc8dcbc44472d2f63f79afb49181d151704b\"]},\"openzeppelin-eth/contracts/utils/Address.sol\":{\"keccak256\":\"0x864c25332d7ccfb46ec8fa0a3c599cceed0f95726f91d5faf748226bf5df626b\",\"urls\":[\"bzzr://8337e6c40f6adc7fd0e1162f47572249d83d7e6c8161eb66c49224a8f5d9418f\"]},\"zos-lib/contracts/Initializable.sol\":{\"keccak256\":\"0xac4cc87395794e21e95549a1b4002881621d59878c4129d534a0089ce5cf7212\",\"urls\":[\"bzzr://1725ac3e1941f8e2bf5c1966abd66bd744d40c85ae8195eb697ec3256bc1fc39\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101115763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a7811461011657806306fdde031461014c578063081812fc146101d6578063095ea7b31461020a57806323b872dd1461023057806342842e0e1461025a5780634cd88b761461028457806350bb4e7f1461031b5780636352211e1461038457806370a082311461039c5780638129fc1c146103cf57806395d89b41146103e4578063983b2d56146103f9578063986502751461041a578063a22cb4651461042f578063aa271e1a14610455578063b88d4fde14610476578063c4d66de8146104e5578063c87b56dd14610506578063e985e9c51461051e575b600080fd5b34801561012257600080fd5b50610138600160e060020a031960043516610545565b604080519115158252519081900360200190f35b34801561015857600080fd5b50610161610564565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019b578181015183820152602001610183565b50505050905090810190601f1680156101c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101e257600080fd5b506101ee6004356105fb565b60408051600160a060020a039092168252519081900360200190f35b34801561021657600080fd5b5061022e600160a060020a036004351660243561062d565b005b34801561023c57600080fd5b5061022e600160a060020a03600435811690602435166044356106e3565b34801561026657600080fd5b5061022e600160a060020a0360043581169060243516604435610771565b34801561029057600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261022e94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506107929650505050505050565b34801561032757600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610138948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506108b39650505050505050565b34801561039057600080fd5b506101ee6004356108e7565b3480156103a857600080fd5b506103bd600160a060020a0360043516610911565b60408051918252519081900360200190f35b3480156103db57600080fd5b5061022e610944565b3480156103f057600080fd5b50610161610a30565b34801561040557600080fd5b5061022e600160a060020a0360043516610a91565b34801561042657600080fd5b5061022e610ab1565b34801561043b57600080fd5b5061022e600160a060020a03600435166024351515610abc565b34801561046157600080fd5b50610138600160a060020a0360043516610b40565b34801561048257600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261022e94600160a060020a038135811695602480359092169560443595369560849401918190840183828082843750949750610b539650505050505050565b3480156104f157600080fd5b5061022e600160a060020a0360043516610b7b565b34801561051257600080fd5b50610161600435610c66565b34801561052a57600080fd5b50610138600160a060020a0360043581169060243516610d1b565b600160e060020a03191660009081526033602052604090205460ff1690565b609c8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105f05780601f106105c5576101008083540402835291602001916105f0565b820191906000526020600020905b8154815290600101906020018083116105d357829003601f168201915b505050505090505b90565b600061060682610d49565b151561061157600080fd5b50600090815260676020526040902054600160a060020a031690565b6000610638826108e7565b9050600160a060020a03838116908216141561065357600080fd5b33600160a060020a038216148061066f575061066f8133610d1b565b151561067a57600080fd5b600082815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6106ed3382610d66565b15156106f857600080fd5b600160a060020a038216151561070d57600080fd5b6107178382610dc5565b6107218382610e36565b61072b8282610ecc565b8082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61078d8383836020604051908101604052806000815250610b53565b505050565b60008054610100900460ff16806107ac57506107ac610f5d565b806107ba575060005460ff16155b1515610812576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061157b833981519152604482015260008051602061159b833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff1661083b610f67565b151561084657600080fd5b825161085990609c9060208601906114ec565b50815161086d90609d9060208501906114ec565b506108977f5b5e139f00000000000000000000000000000000000000000000000000000000610f97565b600080549115156101000261ff00199092169190911790555050565b60006108be33610b40565b15156108c957600080fd5b6108d38484610fd3565b6108dd838361102e565b5060019392505050565b600081815260666020526040812054600160a060020a031680151561090b57600080fd5b92915050565b6000600160a060020a038216151561092857600080fd5b50600160a060020a031660009081526068602052604090205490565b60008054610100900460ff168061095e575061095e610f5d565b8061096c575060005460ff16155b15156109c4576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061157b833981519152604482015260008051602061159b833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff166109ed611061565b610a167f80ac58cd00000000000000000000000000000000000000000000000000000000610f97565b600080549115156101000261ff0019909216919091179055565b609d8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105f05780601f106105c5576101008083540402835291602001916105f0565b610a9a33610b40565b1515610aa557600080fd5b610aae8161112b565b50565b610aba33611173565b565b600160a060020a038216331415610ad257600080fd5b336000818152606960209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b600061090b60d18363ffffffff6111bb16565b610b5e8484846106e3565b610b6a848484846111f2565b1515610b7557600080fd5b50505050565b60008054610100900460ff1680610b955750610b95610f5d565b80610ba3575060005460ff16155b1515610bfb576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061157b833981519152604482015260008051602061159b833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16610c24610f67565b1515610c2f57600080fd5b610c3761135f565b1515610c4257600080fd5b610c4b8261138a565b600080549115156101000261ff001990921691909117905550565b6060610c7182610d49565b1515610c7c57600080fd5b6000828152609e602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610d0f5780601f10610ce457610100808354040283529160200191610d0f565b820191906000526020600020905b815481529060010190602001808311610cf257829003601f168201915b50505050509050919050565b600160a060020a03918216600090815260696020908152604080832093909416825291909152205460ff1690565b600090815260666020526040902054600160a060020a0316151590565b600080610d72836108e7565b905080600160a060020a031684600160a060020a03161480610dad575083600160a060020a0316610da2846105fb565b600160a060020a0316145b80610dbd5750610dbd8185610d1b565b949350505050565b81600160a060020a0316610dd8826108e7565b600160a060020a031614610deb57600080fd5b600081815260676020526040902054600160a060020a031615610e32576000818152606760205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b5050565b81600160a060020a0316610e49826108e7565b600160a060020a031614610e5c57600080fd5b600160a060020a038216600090815260686020526040902054610e8690600163ffffffff61144316565b600160a060020a03909216600090815260686020908152604080832094909455918152606690915220805473ffffffffffffffffffffffffffffffffffffffff19169055565b600081815260666020526040902054600160a060020a031615610eee57600080fd5b6000818152606660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915583526068909152902054610f3d90600161145a565b600160a060020a0390921660009081526068602052604090209190915550565b303b8015905b5090565b6000610f927f80ac58cd00000000000000000000000000000000000000000000000000000000610545565b905090565b600160e060020a03198082161415610fae57600080fd5b600160e060020a0319166000908152603360205260409020805460ff19166001179055565b600160a060020a0382161515610fe857600080fd5b610ff28282610ecc565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b61103782610d49565b151561104257600080fd5b6000828152609e60209081526040909120825161078d928401906114ec565b60008054610100900460ff168061107b575061107b610f5d565b80611089575060005460ff16155b15156110e1576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061157b833981519152604482015260008051602061159b833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff16610a167f01ffc9a700000000000000000000000000000000000000000000000000000000610f97565b61113c60d18263ffffffff61147316565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61118460d18263ffffffff6114ad16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a03821615156111d257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b60008061120785600160a060020a03166114e4565b15156112165760019150611356565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03898116602485015260448401889052608060648501908152875160848601528751918a169463150b7a0294938c938b938b93909160a490910190602085019080838360005b838110156112a9578181015183820152602001611291565b50505050905090810190601f1680156112d65780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156112f857600080fd5b505af115801561130c573d6000803e3d6000fd5b505050506040513d602081101561132257600080fd5b5051600160e060020a031981167f150b7a020000000000000000000000000000000000000000000000000000000014925090505b50949350505050565b6000610f927f5b5e139f00000000000000000000000000000000000000000000000000000000610545565b60008054610100900460ff16806113a457506113a4610f5d565b806113b2575060005460ff16155b151561140a576040805160e560020a62461bcd02815260206004820152602e602482015260008051602061157b833981519152604482015260008051602061159b833981519152606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff1916919091179092550460ff1661143482610b40565b1515610c4b57610c4b8261112b565b6000808383111561145357600080fd5b5050900390565b60008282018381101561146c57600080fd5b9392505050565b600160a060020a038116151561148857600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a03811615156114c257600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b6000903b1190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061152d57805160ff191683800117855561155a565b8280016001018555821561155a579182015b8281111561155a57825182559160200191906001019061153f565b50610f63926105f89250905b80821115610f6357600081556001016115665600436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564000000000000000000000000000000000000a165627a7a72305820a369a212be4c5dc71b34a19dac3257d5a0d1d4389efb711a7fd6bcd2ca7be9c30029",
  "sourceMap": "233:815:27:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;233:815:27;;;;;;;",
  "deployedSourceMap": "233:815:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;824:139:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;824:139:18;-1:-1:-1;;;;;;824:139:18;;;;;;;;;;;;;;;;;;;;;;;1191:70:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1191:70:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1191:70:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3758:141:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3758:141:23;;;;;;;;;-1:-1:-1;;;;;3758:141:23;;;;;;;;;;;;;;3217:270;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3217:270:23;-1:-1:-1;;;;;3217:270:23;;;;;;;;;5263:326;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5263:326:23;-1:-1:-1;;;;;5263:326:23;;;;;;;;;;;;6202:193;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6202:193:23;-1:-1:-1;;;;;6202:193:23;;;;;;;;;;;;688:282:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;688:282:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;688:282:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;688:282:26;;;;-1:-1:-1;688:282:26;-1:-1:-1;688:282:26;;-1:-1:-1;688:282:26;;;;;;;;-1:-1:-1;688:282:26;;-1:-1:-1;688:282:26;;-1:-1:-1;;;;;;;688:282:26;794:218:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;794:218:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;794:218:27;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;794:218:27;;-1:-1:-1;794:218:27;;-1:-1:-1;;;;;;;794:218:27;2651:163:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2651:163:23;;;;;2299:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2299:140:23;-1:-1:-1;;;;;2299:140:23;;;;;;;;;;;;;;;;;;;;;1788:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1788:200:23;;;;1359:74:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1359:74:26;;;;597:84:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;597:84:16;-1:-1:-1;;;;;597:84:16;;;;;685:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;685:69:16;;;;4177:199:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4177:199:23;-1:-1:-1;;;;;4177:199:23;;;;;;;;;493:100:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;493:100:16;-1:-1:-1;;;;;493:100:16;;;;;7074:268:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7074:268:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7074:268:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7074:268:23;;-1:-1:-1;7074:268:23;;-1:-1:-1;;;;;;;7074:268:23;322:189:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;322:189:27;-1:-1:-1;;;;;322:189:27;;;;;1620:132:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1620:132:26;;;;;4683:165:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4683:165:23;-1:-1:-1;;;;;4683:165:23;;;;;;;;;;824:139:18;-1:-1:-1;;;;;;925:33:18;904:4;925:33;;;:20;:33;;;;;;;;;824:139::o;1191:70:26:-;1251:5;1244:12;;;;;;;;-1:-1:-1;;1244:12:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1230:6;;1244:12;;1251:5;;1244:12;;1251:5;1244:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1191:70;;:::o;3758:141:23:-;3817:7;3840:16;3848:7;3840;:16::i;:::-;3832:25;;;;;;;;-1:-1:-1;3870:24:23;;;;:15;:24;;;;;;-1:-1:-1;;;;;3870:24:23;;3758:141::o;3217:270::-;3276:13;3292:16;3300:7;3292;:16::i;:::-;3276:32;-1:-1:-1;;;;;;3322:11:23;;;;;;;;3314:20;;;;;;3348:10;-1:-1:-1;;;;;3348:19:23;;;;:58;;;3371:35;3388:5;3395:10;3371:16;:35::i;:::-;3340:67;;;;;;;;3414:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;3414:29:23;-1:-1:-1;;;;;3414:29:23;;;;;;;;;3454:28;;3414:24;;3454:28;;;;;;;3217:270;;;:::o;5263:326::-;5371:39;5390:10;5402:7;5371:18;:39::i;:::-;5363:48;;;;;;;;-1:-1:-1;;;;;5425:16:23;;;;5417:25;;;;;;5449:29;5464:4;5470:7;5449:14;:29::i;:::-;5484:31;5501:4;5507:7;5484:16;:31::i;:::-;5521:24;5533:2;5537:7;5521:11;:24::i;:::-;5576:7;5572:2;-1:-1:-1;;;;;5557:27:23;5566:4;-1:-1:-1;;;;;5557:27:23;;;;;;;;;;;5263:326;;;:::o;6202:193::-;6351:39;6368:4;6374:2;6378:7;6351:39;;;;;;;;;;;;;:16;:39::i;:::-;6202:193;;;:::o;688:282:26:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;769:28:26;:26;:28::i;:::-;761:37;;;;;;;;805:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;823:16:26;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;919:46:26;938:26;919:18;:46::i;:::-;1228:12:35;:30;;;;;;;-1:-1:-1;;1228:30:35;;;;;;;;;-1:-1:-1;;688:282:26:o;794:218:27:-;921:4;456:20:16;465:10;456:8;:20::i;:::-;448:29;;;;;;;;935:18:27;941:2;945:7;935:5;:18::i;:::-;959:31;972:7;981:8;959:12;:31::i;:::-;-1:-1:-1;1003:4:27;794:218;;;;;:::o;2651:163:23:-;2706:7;2737:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2737:20:23;2771:19;;;2763:28;;;;;;2804:5;2651:163;-1:-1:-1;;2651:163:23:o;2299:140::-;2354:7;-1:-1:-1;;;;;2377:19:23;;;;2369:28;;;;;;-1:-1:-1;;;;;;2410:24:23;;;;;:17;:24;;;;;;;2299:140::o;1788:200::-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;1845:19:23;:17;:19::i;:::-;1944:39;1963:19;1944:18;:39::i;:::-;1228:12:35;:30;;;;;;;-1:-1:-1;;1228:30:35;;;;;;;;;1788:200:23:o;1359:74:26:-;1421:7;1414:14;;;;;;;;-1:-1:-1;;1414:14:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:6;;1414:14;;1421:7;;1414:14;;1421:7;1414:14;;;;;;;;;;;;;;;;;;;;;;;;597:84:16;456:20;465:10;456:8;:20::i;:::-;448:29;;;;;;;;657:19;668:7;657:10;:19::i;:::-;597:84;:::o;685:69::-;724:25;738:10;724:13;:25::i;:::-;685:69::o;4177:199:23:-;-1:-1:-1;;;;;4252:16:23;;4258:10;4252:16;;4244:25;;;;;;4294:10;4275:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4275:34:23;;;;;;;;;;;;:45;;-1:-1:-1;;4275:45:23;;;;;;;;;;4331:40;;;;;;;4275:34;;4294:10;4331:40;;;;;;;;;;;4177:199;;:::o;493:100:16:-;549:4;568:20;:7;580;568:20;:11;:20;:::i;7074:268:23:-;7195:31;7208:4;7214:2;7218:7;7195:12;:31::i;:::-;7285:51;7311:4;7317:2;7321:7;7330:5;7285:25;:51::i;:::-;7277:60;;;;;;;;7074:268;;;;:::o;322:189:27:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;391:28:27;:26;:28::i;:::-;383:37;;;;;;;;434:36;:34;:36::i;:::-;426:45;;;;;;;;477:29;499:6;477:21;:29::i;:::-;1228:12:35;:30;;;;;;;-1:-1:-1;;1228:30:35;;;;;;;;;-1:-1:-1;322:189:27:o;1620:132:26:-;1676:6;1698:16;1706:7;1698;:16::i;:::-;1690:25;;;;;;;;1728:19;;;;:10;:19;;;;;;;;;1721:26;;;;;;-1:-1:-1;;1721:26:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1728:19;;1721:26;;1728:19;1721:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:132;;;:::o;4683:165:23:-;-1:-1:-1;;;;;4808:25:23;;;4787:4;4808:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4683:165::o;7519:142::-;7576:4;7604:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7604:20:23;7637:19;;;7519:142::o;8006:432::-;8115:4;8129:13;8145:16;8153:7;8145;:16::i;:::-;8129:32;;8339:5;-1:-1:-1;;;;;8328:16:23;:7;-1:-1:-1;;;;;8328:16:23;;:57;;;;8378:7;-1:-1:-1;;;;;8354:31:23;:20;8366:7;8354:11;:20::i;:::-;-1:-1:-1;;;;;8354:31:23;;8328:57;:99;;;;8395:32;8412:5;8419:7;8395:16;:32::i;:::-;8313:120;8006:432;-1:-1:-1;;;;8006:432:23:o;9475:211::-;9574:5;-1:-1:-1;;;;;9554:25:23;:16;9562:7;9554;:16::i;:::-;-1:-1:-1;;;;;9554:25:23;;9546:34;;;;;;9626:1;9590:24;;;:15;:24;;;;;;-1:-1:-1;;;;;9590:24:23;:38;9586:96;;9673:1;9638:24;;;:15;:24;;;;;:37;;-1:-1:-1;;9638:37:23;;;9586:96;9475:211;;:::o;10426:::-;10526:4;-1:-1:-1;;;;;10506:24:23;:16;10514:7;10506;:16::i;:::-;-1:-1:-1;;;;;10506:24:23;;10498:33;;;;;;-1:-1:-1;;;;;10563:23:23;;;;;;:17;:23;;;;;;:30;;10591:1;10563:30;:27;:30;:::i;:::-;-1:-1:-1;;;;;10537:23:23;;;;;;;:17;:23;;;;;;;;:56;;;;10599:20;;;:11;:20;;;;:33;;-1:-1:-1;;10599:33:23;;;10426:211::o;9947:202::-;10052:1;10020:20;;;:11;:20;;;;;;-1:-1:-1;;;;;10020:20:23;:34;10012:43;;;;;;10061:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;10061:25:23;-1:-1:-1;;;;;10061:25:23;;;;;;;;10116:21;;:17;:21;;;;;;:28;;-1:-1:-1;10116:25:23;:28::i;:::-;-1:-1:-1;;;;;10092:21:23;;;;;;;:17;:21;;;;;:52;;;;-1:-1:-1;9947:202:23:o;1349:467:35:-;1782:7;1770:20;1804:7;;;1349:467;;;:::o;1992:116:23:-;2046:4;2065:38;2083:19;2065:17;:38::i;:::-;2058:45;;1992:116;:::o;1033:154:18:-;-1:-1:-1;;;;;;1110:25:18;;;;;1102:34;;;;;;-1:-1:-1;;;;;;1142:33:18;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1142:40:18;1178:4;1142:40;;;1033:154::o;8685:163:23:-;-1:-1:-1;;;;;8752:16:23;;;;8744:25;;;;;;8775:24;8787:2;8791:7;8775:11;:24::i;:::-;8810:33;;8835:7;;-1:-1:-1;;;;;8810:33:23;;;8827:1;;8810:33;;8827:1;;8810:33;8685:163;;:::o;1975:127:26:-;2049:16;2057:7;2049;:16::i;:::-;2041:25;;;;;;;;2072:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;640:101:18:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;697:39:18;716:19;697:18;:39::i;758:108:16:-;810:20;:7;822;810:20;:11;:20;:::i;:::-;841;;-1:-1:-1;;;;;841:20:16;;;;;;;;758:108;:::o;870:116::-;925:23;:7;940;925:23;:14;:23;:::i;:::-;959:22;;-1:-1:-1;;;;;959:22:16;;;;;;;;870:116;:::o;657:166:15:-;741:4;-1:-1:-1;;;;;763:21:15;;;;755:30;;;;;;-1:-1:-1;;;;;;798:20:15;:11;:20;;;;;;;;;;;;;;;657:166::o;11140:343:23:-;11277:4;11344:13;11296:15;:2;-1:-1:-1;;;;;11296:13:23;;:15::i;:::-;11295:16;11291:48;;;11328:4;11321:11;;;;11291:48;11360:77;;;;;11404:10;11360:77;;;;;;-1:-1:-1;;;;;11360:77:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;;;;11404:10;11416:4;;11422:7;;11431:5;;11360:77;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11360:77:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11360:77:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11360:77:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11360:77:23;-1:-1:-1;;;;;;11451:26:23;;11461:16;11451:26;;-1:-1:-1;11360:77:23;-1:-1:-1;11140:343:23;;;;;;;;:::o;974:123:26:-;1028:4;1047:45;1065:26;1047:17;:45::i;295:121:16:-;1129:20:35;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:35;;;;1059:12;1024:47;1016:106;;;;;;;-1:-1:-1;;;;;1016:106:35;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;-1:-1:-1;;;;;;;;;;;1016:106:35;;;;;;;;;;;;;;;-1:-1:-1;1152:12:35;;;;;-1:-1:-1;;1170:19:35;;;;-1:-1:-1;;1195:18:35;;;;;;;;1152:12;;;361:16:16;370:6;361:8;:16::i;:::-;360:17;356:56;;;387:18;398:6;387:10;:18::i;1079:131:21:-;1137:7;;1160:6;;;;1152:15;;;;;;-1:-1:-1;;1185:5:21;;;1079:131::o;1273:::-;1331:7;1358:5;;;1377:6;;;;1369:15;;;;;;1398:1;1273:131;-1:-1:-1;;;1273:131:21:o;245:132:15:-;-1:-1:-1;;;;;317:21:15;;;;309:30;;;;;;-1:-1:-1;;;;;345:20:15;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;345:27:15;368:4;345:27;;;245:132::o;443:136::-;-1:-1:-1;;;;;518:21:15;;;;510:30;;;;;;-1:-1:-1;;;;;546:20:15;569:5;546:20;;;;;;;;;;;:28;;-1:-1:-1;;546:28:15;;;443:136::o;450:582:34:-;510:4;985:20;;1019:8;;450:582::o;233:815:27:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;233:815:27;;;;-1:-1:-1;233:815:27;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.4.24;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"./ERC721Metadata.sol\";\nimport \"../../access/roles/MinterRole.sol\";\n\n\n/**\n * @title ERC721MetadataMintable\n * @dev ERC721 minting logic with metadata\n */\ncontract ERC721MetadataMintable is Initializable, ERC721, ERC721Metadata, MinterRole {\n  function initialize(address sender) public initializer {\n    require(ERC721._hasBeenInitialized());\n    require(ERC721Metadata._hasBeenInitialized());\n    MinterRole.initialize(sender);\n  }\n\n  /**\n   * @dev Function to mint tokens\n   * @param to The address that will receive the minted tokens.\n   * @param tokenId The token id to mint.\n   * @param tokenURI The token URI of the minted token.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mintWithTokenURI(\n    address to,\n    uint256 tokenId,\n    string tokenURI\n  )\n    public\n    onlyMinter\n    returns (bool)\n  {\n    _mint(to, tokenId);\n    _setTokenURI(tokenId, tokenURI);\n    return true;\n  }\n\n  uint256[50] private ______gap;\n}\n",
  "sourcePath": "openzeppelin-eth/contracts/token/ERC721/ERC721MetadataMintable.sol",
  "ast": {
    "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721MetadataMintable.sol",
    "exportedSymbols": {
      "ERC721MetadataMintable": [
        15576
      ]
    },
    "id": 15577,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15508,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:27"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 15509,
        "nodeType": "ImportDirective",
        "scope": 15577,
        "sourceUnit": 16034,
        "src": "26:45:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 15510,
        "nodeType": "ImportDirective",
        "scope": 15577,
        "sourceUnit": 15507,
        "src": "72:30:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 15511,
        "nodeType": "ImportDirective",
        "scope": 15577,
        "sourceUnit": 13928,
        "src": "103:43:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15512,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16033,
              "src": "268:13:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$16033",
                "typeString": "contract Initializable"
              }
            },
            "id": 15513,
            "nodeType": "InheritanceSpecifier",
            "src": "268:13:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15514,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15015,
              "src": "283:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$15015",
                "typeString": "contract ERC721"
              }
            },
            "id": 15515,
            "nodeType": "InheritanceSpecifier",
            "src": "283:6:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15516,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15506,
              "src": "291:14:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$15506",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 15517,
            "nodeType": "InheritanceSpecifier",
            "src": "291:14:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15518,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13927,
              "src": "307:10:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$13927",
                "typeString": "contract MinterRole"
              }
            },
            "id": 15519,
            "nodeType": "InheritanceSpecifier",
            "src": "307:10:27"
          }
        ],
        "contractDependencies": [
          13927,
          14106,
          14116,
          15015,
          15506,
          15772,
          15828,
          16033
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721MetadataMintable\n@dev ERC721 minting logic with metadata",
        "fullyImplemented": true,
        "id": 15576,
        "linearizedBaseContracts": [
          15576,
          13927,
          15506,
          15828,
          15015,
          15772,
          14106,
          14116,
          16033
        ],
        "name": "ERC721MetadataMintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15544,
              "nodeType": "Block",
              "src": "377:134:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 15527,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15015,
                            "src": "391:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$15015_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 15528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14515,
                          "src": "391:26:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 15529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "391:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16051,
                        16052
                      ],
                      "referencedDeclaration": 16051,
                      "src": "383:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "383:37:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15531,
                  "nodeType": "ExpressionStatement",
                  "src": "383:37:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 15533,
                            "name": "ERC721Metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15506,
                            "src": "434:14:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$15506_$",
                              "typeString": "type(contract ERC721Metadata)"
                            }
                          },
                          "id": 15534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15417,
                          "src": "434:34:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 15535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "434:36:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16051,
                        16052
                      ],
                      "referencedDeclaration": 16051,
                      "src": "426:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "426:45:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15537,
                  "nodeType": "ExpressionStatement",
                  "src": "426:45:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15541,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15521,
                        "src": "499:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15538,
                        "name": "MinterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13927,
                        "src": "477:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MinterRole_$13927_$",
                          "typeString": "type(contract MinterRole)"
                        }
                      },
                      "id": 15540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13845,
                      "src": "477:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "477:29:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15543,
                  "nodeType": "ExpressionStatement",
                  "src": "477:29:27"
                }
              ]
            },
            "documentation": null,
            "id": 15545,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 15524,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15523,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16014,
                  "src": "365:11:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "365:11:27"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15521,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 15545,
                  "src": "342:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "341:16:27"
            },
            "payable": false,
            "returnParameters": {
              "id": 15525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:0:27"
            },
            "scope": 15576,
            "src": "322:189:27",
            "stateMutability": "nonpayable",
            "superFunction": 13845,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15570,
              "nodeType": "Block",
              "src": "929:83:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15559,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15547,
                        "src": "941:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15560,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15549,
                        "src": "945:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15558,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14841,
                      "src": "935:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "935:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15562,
                  "nodeType": "ExpressionStatement",
                  "src": "935:18:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15564,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15549,
                        "src": "972:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15565,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15551,
                        "src": "981:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 15563,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15471,
                      "src": "959:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 15566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:31:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15567,
                  "nodeType": "ExpressionStatement",
                  "src": "959:31:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 15568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1003:4:27",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15557,
                  "id": 15569,
                  "nodeType": "Return",
                  "src": "996:11:27"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param tokenId The token id to mint.\n@param tokenURI The token URI of the minted token.\n@return A boolean that indicates if the operation was successful.",
            "id": 15571,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 15554,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15553,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13856,
                  "src": "897:10:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "897:10:27"
              }
            ],
            "name": "mintWithTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15547,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 15571,
                  "src": "825:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15549,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 15571,
                  "src": "841:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15551,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 15571,
                  "src": "862:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "819:62:27"
            },
            "payable": false,
            "returnParameters": {
              "id": 15557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15556,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15571,
                  "src": "921:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15555,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "920:6:27"
            },
            "scope": 15576,
            "src": "794:218:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15575,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 15576,
            "src": "1016:29:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 15572,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1016:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 15574,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 15573,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1024:2:27",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1016:11:27",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 15577,
        "src": "233:815:27"
      }
    ],
    "src": "0:1049:27"
  },
  "legacyAST": {
    "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721MetadataMintable.sol",
    "exportedSymbols": {
      "ERC721MetadataMintable": [
        15576
      ]
    },
    "id": 15577,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15508,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:27"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 15509,
        "nodeType": "ImportDirective",
        "scope": 15577,
        "sourceUnit": 16034,
        "src": "26:45:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 15510,
        "nodeType": "ImportDirective",
        "scope": 15577,
        "sourceUnit": 15507,
        "src": "72:30:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-eth/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 15511,
        "nodeType": "ImportDirective",
        "scope": 15577,
        "sourceUnit": 13928,
        "src": "103:43:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15512,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16033,
              "src": "268:13:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$16033",
                "typeString": "contract Initializable"
              }
            },
            "id": 15513,
            "nodeType": "InheritanceSpecifier",
            "src": "268:13:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15514,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15015,
              "src": "283:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$15015",
                "typeString": "contract ERC721"
              }
            },
            "id": 15515,
            "nodeType": "InheritanceSpecifier",
            "src": "283:6:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15516,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15506,
              "src": "291:14:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$15506",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 15517,
            "nodeType": "InheritanceSpecifier",
            "src": "291:14:27"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15518,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13927,
              "src": "307:10:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$13927",
                "typeString": "contract MinterRole"
              }
            },
            "id": 15519,
            "nodeType": "InheritanceSpecifier",
            "src": "307:10:27"
          }
        ],
        "contractDependencies": [
          13927,
          14106,
          14116,
          15015,
          15506,
          15772,
          15828,
          16033
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721MetadataMintable\n@dev ERC721 minting logic with metadata",
        "fullyImplemented": true,
        "id": 15576,
        "linearizedBaseContracts": [
          15576,
          13927,
          15506,
          15828,
          15015,
          15772,
          14106,
          14116,
          16033
        ],
        "name": "ERC721MetadataMintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15544,
              "nodeType": "Block",
              "src": "377:134:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 15527,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15015,
                            "src": "391:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$15015_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 15528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14515,
                          "src": "391:26:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 15529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "391:28:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16051,
                        16052
                      ],
                      "referencedDeclaration": 16051,
                      "src": "383:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "383:37:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15531,
                  "nodeType": "ExpressionStatement",
                  "src": "383:37:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 15533,
                            "name": "ERC721Metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15506,
                            "src": "434:14:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$15506_$",
                              "typeString": "type(contract ERC721Metadata)"
                            }
                          },
                          "id": 15534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15417,
                          "src": "434:34:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 15535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "434:36:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16051,
                        16052
                      ],
                      "referencedDeclaration": 16051,
                      "src": "426:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "426:45:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15537,
                  "nodeType": "ExpressionStatement",
                  "src": "426:45:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15541,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15521,
                        "src": "499:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15538,
                        "name": "MinterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13927,
                        "src": "477:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MinterRole_$13927_$",
                          "typeString": "type(contract MinterRole)"
                        }
                      },
                      "id": 15540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13845,
                      "src": "477:21:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "477:29:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15543,
                  "nodeType": "ExpressionStatement",
                  "src": "477:29:27"
                }
              ]
            },
            "documentation": null,
            "id": 15545,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 15524,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15523,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 16014,
                  "src": "365:11:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "365:11:27"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15521,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 15545,
                  "src": "342:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "341:16:27"
            },
            "payable": false,
            "returnParameters": {
              "id": 15525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:0:27"
            },
            "scope": 15576,
            "src": "322:189:27",
            "stateMutability": "nonpayable",
            "superFunction": 13845,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15570,
              "nodeType": "Block",
              "src": "929:83:27",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15559,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15547,
                        "src": "941:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15560,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15549,
                        "src": "945:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15558,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14841,
                      "src": "935:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "935:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15562,
                  "nodeType": "ExpressionStatement",
                  "src": "935:18:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 15564,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15549,
                        "src": "972:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 15565,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15551,
                        "src": "981:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 15563,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15471,
                      "src": "959:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 15566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:31:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15567,
                  "nodeType": "ExpressionStatement",
                  "src": "959:31:27"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 15568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1003:4:27",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15557,
                  "id": 15569,
                  "nodeType": "Return",
                  "src": "996:11:27"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param tokenId The token id to mint.\n@param tokenURI The token URI of the minted token.\n@return A boolean that indicates if the operation was successful.",
            "id": 15571,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 15554,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15553,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13856,
                  "src": "897:10:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "897:10:27"
              }
            ],
            "name": "mintWithTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15547,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 15571,
                  "src": "825:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15549,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 15571,
                  "src": "841:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15551,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 15571,
                  "src": "862:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "819:62:27"
            },
            "payable": false,
            "returnParameters": {
              "id": 15557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15556,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 15571,
                  "src": "921:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15555,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "920:6:27"
            },
            "scope": 15576,
            "src": "794:218:27",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15575,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 15576,
            "src": "1016:29:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 15572,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1016:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 15574,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 15573,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1024:2:27",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1016:11:27",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 15577,
        "src": "233:815:27"
      }
    ],
    "src": "0:1049:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-06-11T20:54:33.515Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.   * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "ERC721MetadataMintable"
  },
  "userdoc": {
    "methods": {}
  }
}